{{- $core := .Values.persistence.persistentVolumeClaim.core -}}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "api-testing.fullname" . }}
  labels:
    {{- include "api-testing.labels" . | nindent 4 }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "api-testing.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "api-testing.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "api-testing.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          command:
          - atest
          - server
          - --local-storage=/var/www/sample/*.yaml
          {{- if .Values.skywalking.endpoint.http }}
          - --skywalking={{ .Values.skywalking.endpoint.http }}
          {{- end }}
          env:
          {{- if .Values.skywalking.endpoint.grpc }}
          - name: SW_AGENT_REPORTER_GRPC_BACKEND_SERVICE
            value: {{ .Values.skywalking.endpoint.grpc }}
          - name: SW_AGENT_REPORTER_DISCARD
            value: "false"
          {{- else }}
          - name: SW_AGENT_REPORTER_DISCARD
            value: "true"
          {{- end }}
          - name: SW_AGENT_NAME
            value: atest
          ports:
            - name: http
              containerPort: {{ .Values.service.port }}
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /
              port: http
          readinessProbe:
            httpGet:
              path: /
              port: http
          volumeMounts:
          - name: data
            mountPath: /var/www/sample
            subPath: {{ $core.subPath }}
          - name: data
            mountPath: /root
            subPath: config
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      volumes:
      {{- if not .Values.persistence.enabled }}
      - name: "data"
        emptyDir: {}
      {{- else if $core.existingClaim }}
      - name: "data"
        persistentVolumeClaim:
          claimName: {{ $core.existingClaim }}
      {{- else }}
      - name: "data"
        persistentVolumeClaim:
          claimName: {{ include "api-testing.fullname" . }}
      {{- end -}}
