#!api-testing
name: Kubernetes
api: |
  {{default "https://172.11.0.18:6443" (env "SERVER")}}
items:
- name: pods
  request:
    api: /api/v1/namespaces/kube-system/pods
    header:
      Authorization: Bearer {{env "K8S_TOKEN"}}
  expect:
    verify:
    - data.kind == "PodList"
    - pod("kube-system", "kube-ovn-cni-55bz9").Exist()
    - k8s("pods", "kube-system", "kube-ovn-cni-55bz9").Exist()
    - k8s("deployments", "kube-system", "coredns").Exist()
    - k8s("deployments", "kube-system", "coredns").ExpectField(2, "spec", "replicas")
    - k8s("deployments", "kube-system", "coredns").ExpectField("kube-dns", "metadata", "labels", "k8s-app")
    - k8s("daemonsets", "kube-system", "kube-ovn-cni").Exist()
    - k8s({"kind":"virtualmachines","group":"kubevirt.io"}, "vm-test", "vm-win10-dkkhl").Exist()
- name: create-configmap
  request:
    api: /api/v1/namespaces/default/configmaps
    header:
      Authorization: Bearer {{env "K8S_TOKEN"}}
    method: POST
    body: |
      {
        "apiVersion": "v1",
        "kind": "ConfigMap",
        "metadata": {
          "name": "config",
          "namespace": "default"
        },
        "data": {
          "key": "value"
        }
      }
  expect:
    statusCode: 201
- name: update-configmap
  request:
    api: /api/v1/namespaces/default/configmaps/config
    header:
      Authorization: Bearer {{env "K8S_TOKEN"}}
    method: PUT
    body: |
      {
        "apiVersion": "v1",
        "kind": "ConfigMap",
        "metadata": {
          "name": "config",
          "namespace": "default"
        },
        "data": {
          "key": "new value"
        }
      }
  expect:
    statusCode: 200
- name: get-configmap
  request:
    api: /api/v1/namespaces/default/configmaps/config
    header:
      Authorization: Bearer {{env "K8S_TOKEN"}}
    method: PUT
    body: |
      {
        "apiVersion": "v1",
        "kind": "ConfigMap",
        "metadata": {
          "name": "config",
          "namespace": "default"
        },
        "data": {
          "key": "new value"
        }
      }
  expect:
    statusCode: 200
    bodyFieldsExpect:
      "data/key": "new value"
- name: delete-configmap
  request:
    api: /api/v1/namespaces/default/configmaps/config
    header:
      Authorization: Bearer {{env "K8S_TOKEN"}}
    method: DELETE
  expect:
    statusCode: 200
