// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.8
// 	protoc        v5.29.3
// source: pkg/server/server.proto

package server

import (
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ValidationErrorType int32

const (
	ValidationErrorType_VALIDATION_ERROR_TYPE_UNSPECIFIED ValidationErrorType = 0
	ValidationErrorType_SYNTAX_ERROR                      ValidationErrorType = 1
	ValidationErrorType_SEMANTIC_ERROR                    ValidationErrorType = 2
	ValidationErrorType_PERFORMANCE_WARNING               ValidationErrorType = 3
	ValidationErrorType_SECURITY_WARNING                  ValidationErrorType = 4
)

// Enum value maps for ValidationErrorType.
var (
	ValidationErrorType_name = map[int32]string{
		0: "VALIDATION_ERROR_TYPE_UNSPECIFIED",
		1: "SYNTAX_ERROR",
		2: "SEMANTIC_ERROR",
		3: "PERFORMANCE_WARNING",
		4: "SECURITY_WARNING",
	}
	ValidationErrorType_value = map[string]int32{
		"VALIDATION_ERROR_TYPE_UNSPECIFIED": 0,
		"SYNTAX_ERROR":                      1,
		"SEMANTIC_ERROR":                    2,
		"PERFORMANCE_WARNING":               3,
		"SECURITY_WARNING":                  4,
	}
)

func (x ValidationErrorType) Enum() *ValidationErrorType {
	p := new(ValidationErrorType)
	*p = x
	return p
}

func (x ValidationErrorType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ValidationErrorType) Descriptor() protoreflect.EnumDescriptor {
	return file_pkg_server_server_proto_enumTypes[0].Descriptor()
}

func (ValidationErrorType) Type() protoreflect.EnumType {
	return &file_pkg_server_server_proto_enumTypes[0]
}

func (x ValidationErrorType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ValidationErrorType.Descriptor instead.
func (ValidationErrorType) EnumDescriptor() ([]byte, []int) {
	return file_pkg_server_server_proto_rawDescGZIP(), []int{0}
}

type HealthStatus int32

const (
	HealthStatus_HEALTH_STATUS_UNSPECIFIED HealthStatus = 0
	HealthStatus_HEALTHY                   HealthStatus = 1
	HealthStatus_DEGRADED                  HealthStatus = 2
	HealthStatus_UNHEALTHY                 HealthStatus = 3
)

// Enum value maps for HealthStatus.
var (
	HealthStatus_name = map[int32]string{
		0: "HEALTH_STATUS_UNSPECIFIED",
		1: "HEALTHY",
		2: "DEGRADED",
		3: "UNHEALTHY",
	}
	HealthStatus_value = map[string]int32{
		"HEALTH_STATUS_UNSPECIFIED": 0,
		"HEALTHY":                   1,
		"DEGRADED":                  2,
		"UNHEALTHY":                 3,
	}
)

func (x HealthStatus) Enum() *HealthStatus {
	p := new(HealthStatus)
	*p = x
	return p
}

func (x HealthStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (HealthStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_pkg_server_server_proto_enumTypes[1].Descriptor()
}

func (HealthStatus) Type() protoreflect.EnumType {
	return &file_pkg_server_server_proto_enumTypes[1]
}

func (x HealthStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use HealthStatus.Descriptor instead.
func (HealthStatus) EnumDescriptor() ([]byte, []int) {
	return file_pkg_server_server_proto_rawDescGZIP(), []int{1}
}

type AIErrorCode int32

const (
	AIErrorCode_AI_ERROR_CODE_UNSPECIFIED AIErrorCode = 0
	AIErrorCode_INVALID_INPUT             AIErrorCode = 1
	AIErrorCode_MODEL_UNAVAILABLE         AIErrorCode = 2
	AIErrorCode_RATE_LIMITED              AIErrorCode = 3
	AIErrorCode_PROCESSING_ERROR          AIErrorCode = 4
	AIErrorCode_CONFIGURATION_ERROR       AIErrorCode = 5
)

// Enum value maps for AIErrorCode.
var (
	AIErrorCode_name = map[int32]string{
		0: "AI_ERROR_CODE_UNSPECIFIED",
		1: "INVALID_INPUT",
		2: "MODEL_UNAVAILABLE",
		3: "RATE_LIMITED",
		4: "PROCESSING_ERROR",
		5: "CONFIGURATION_ERROR",
	}
	AIErrorCode_value = map[string]int32{
		"AI_ERROR_CODE_UNSPECIFIED": 0,
		"INVALID_INPUT":             1,
		"MODEL_UNAVAILABLE":         2,
		"RATE_LIMITED":              3,
		"PROCESSING_ERROR":          4,
		"CONFIGURATION_ERROR":       5,
	}
)

func (x AIErrorCode) Enum() *AIErrorCode {
	p := new(AIErrorCode)
	*p = x
	return p
}

func (x AIErrorCode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (AIErrorCode) Descriptor() protoreflect.EnumDescriptor {
	return file_pkg_server_server_proto_enumTypes[2].Descriptor()
}

func (AIErrorCode) Type() protoreflect.EnumType {
	return &file_pkg_server_server_proto_enumTypes[2]
}

func (x AIErrorCode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use AIErrorCode.Descriptor instead.
func (AIErrorCode) EnumDescriptor() ([]byte, []int) {
	return file_pkg_server_server_proto_rawDescGZIP(), []int{2}
}

type Menu struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Name          string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Index         string                 `protobuf:"bytes,2,opt,name=index,proto3" json:"index,omitempty"`
	Icon          string                 `protobuf:"bytes,3,opt,name=icon,proto3" json:"icon,omitempty"`
	Version       int32                  `protobuf:"varint,4,opt,name=version,proto3" json:"version,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Menu) Reset() {
	*x = Menu{}
	mi := &file_pkg_server_server_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Menu) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Menu) ProtoMessage() {}

func (x *Menu) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_server_server_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Menu.ProtoReflect.Descriptor instead.
func (*Menu) Descriptor() ([]byte, []int) {
	return file_pkg_server_server_proto_rawDescGZIP(), []int{0}
}

func (x *Menu) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Menu) GetIndex() string {
	if x != nil {
		return x.Index
	}
	return ""
}

func (x *Menu) GetIcon() string {
	if x != nil {
		return x.Icon
	}
	return ""
}

func (x *Menu) GetVersion() int32 {
	if x != nil {
		return x.Version
	}
	return 0
}

type MenuList struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Data          []*Menu                `protobuf:"bytes,1,rep,name=data,proto3" json:"data,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MenuList) Reset() {
	*x = MenuList{}
	mi := &file_pkg_server_server_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MenuList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MenuList) ProtoMessage() {}

func (x *MenuList) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_server_server_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MenuList.ProtoReflect.Descriptor instead.
func (*MenuList) Descriptor() ([]byte, []int) {
	return file_pkg_server_server_proto_rawDescGZIP(), []int{1}
}

func (x *MenuList) GetData() []*Menu {
	if x != nil {
		return x.Data
	}
	return nil
}

type Suites struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Data          map[string]*Items      `protobuf:"bytes,1,rep,name=data,proto3" json:"data,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Suites) Reset() {
	*x = Suites{}
	mi := &file_pkg_server_server_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Suites) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Suites) ProtoMessage() {}

func (x *Suites) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_server_server_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Suites.ProtoReflect.Descriptor instead.
func (*Suites) Descriptor() ([]byte, []int) {
	return file_pkg_server_server_proto_rawDescGZIP(), []int{2}
}

func (x *Suites) GetData() map[string]*Items {
	if x != nil {
		return x.Data
	}
	return nil
}

type Items struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Data          []string               `protobuf:"bytes,1,rep,name=data,proto3" json:"data,omitempty"`
	Kind          string                 `protobuf:"bytes,2,opt,name=kind,proto3" json:"kind,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Items) Reset() {
	*x = Items{}
	mi := &file_pkg_server_server_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Items) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Items) ProtoMessage() {}

func (x *Items) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_server_server_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Items.ProtoReflect.Descriptor instead.
func (*Items) Descriptor() ([]byte, []int) {
	return file_pkg_server_server_proto_rawDescGZIP(), []int{3}
}

func (x *Items) GetData() []string {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *Items) GetKind() string {
	if x != nil {
		return x.Kind
	}
	return ""
}

type HistorySuites struct {
	state         protoimpl.MessageState   `protogen:"open.v1"`
	Data          map[string]*HistoryItems `protobuf:"bytes,1,rep,name=data,proto3" json:"data,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *HistorySuites) Reset() {
	*x = HistorySuites{}
	mi := &file_pkg_server_server_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *HistorySuites) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HistorySuites) ProtoMessage() {}

func (x *HistorySuites) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_server_server_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HistorySuites.ProtoReflect.Descriptor instead.
func (*HistorySuites) Descriptor() ([]byte, []int) {
	return file_pkg_server_server_proto_rawDescGZIP(), []int{4}
}

func (x *HistorySuites) GetData() map[string]*HistoryItems {
	if x != nil {
		return x.Data
	}
	return nil
}

type HistoryItems struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Data          []*HistoryCaseIdentity `protobuf:"bytes,1,rep,name=data,proto3" json:"data,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *HistoryItems) Reset() {
	*x = HistoryItems{}
	mi := &file_pkg_server_server_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *HistoryItems) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HistoryItems) ProtoMessage() {}

func (x *HistoryItems) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_server_server_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HistoryItems.ProtoReflect.Descriptor instead.
func (*HistoryItems) Descriptor() ([]byte, []int) {
	return file_pkg_server_server_proto_rawDescGZIP(), []int{5}
}

func (x *HistoryItems) GetData() []*HistoryCaseIdentity {
	if x != nil {
		return x.Data
	}
	return nil
}

type HistoryCaseIdentity struct {
	state            protoimpl.MessageState `protogen:"open.v1"`
	Suite            string                 `protobuf:"bytes,1,opt,name=suite,proto3" json:"suite,omitempty"`
	Testcase         string                 `protobuf:"bytes,2,opt,name=testcase,proto3" json:"testcase,omitempty"`
	HistorySuiteName string                 `protobuf:"bytes,3,opt,name=historySuiteName,proto3" json:"historySuiteName,omitempty"`
	Kind             string                 `protobuf:"bytes,4,opt,name=kind,proto3" json:"kind,omitempty"`
	ID               string                 `protobuf:"bytes,5,opt,name=ID,proto3" json:"ID,omitempty"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *HistoryCaseIdentity) Reset() {
	*x = HistoryCaseIdentity{}
	mi := &file_pkg_server_server_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *HistoryCaseIdentity) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HistoryCaseIdentity) ProtoMessage() {}

func (x *HistoryCaseIdentity) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_server_server_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HistoryCaseIdentity.ProtoReflect.Descriptor instead.
func (*HistoryCaseIdentity) Descriptor() ([]byte, []int) {
	return file_pkg_server_server_proto_rawDescGZIP(), []int{6}
}

func (x *HistoryCaseIdentity) GetSuite() string {
	if x != nil {
		return x.Suite
	}
	return ""
}

func (x *HistoryCaseIdentity) GetTestcase() string {
	if x != nil {
		return x.Testcase
	}
	return ""
}

func (x *HistoryCaseIdentity) GetHistorySuiteName() string {
	if x != nil {
		return x.HistorySuiteName
	}
	return ""
}

func (x *HistoryCaseIdentity) GetKind() string {
	if x != nil {
		return x.Kind
	}
	return ""
}

func (x *HistoryCaseIdentity) GetID() string {
	if x != nil {
		return x.ID
	}
	return ""
}

type TestCaseIdentity struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Suite         string                 `protobuf:"bytes,1,opt,name=suite,proto3" json:"suite,omitempty"`
	Testcase      string                 `protobuf:"bytes,2,opt,name=testcase,proto3" json:"testcase,omitempty"`
	Parameters    []*Pair                `protobuf:"bytes,3,rep,name=parameters,proto3" json:"parameters,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TestCaseIdentity) Reset() {
	*x = TestCaseIdentity{}
	mi := &file_pkg_server_server_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TestCaseIdentity) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TestCaseIdentity) ProtoMessage() {}

func (x *TestCaseIdentity) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_server_server_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TestCaseIdentity.ProtoReflect.Descriptor instead.
func (*TestCaseIdentity) Descriptor() ([]byte, []int) {
	return file_pkg_server_server_proto_rawDescGZIP(), []int{7}
}

func (x *TestCaseIdentity) GetSuite() string {
	if x != nil {
		return x.Suite
	}
	return ""
}

func (x *TestCaseIdentity) GetTestcase() string {
	if x != nil {
		return x.Testcase
	}
	return ""
}

func (x *TestCaseIdentity) GetParameters() []*Pair {
	if x != nil {
		return x.Parameters
	}
	return nil
}

type TestSuiteSource struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Kind          string                 `protobuf:"bytes,1,opt,name=kind,proto3" json:"kind,omitempty"`
	Url           string                 `protobuf:"bytes,2,opt,name=url,proto3" json:"url,omitempty"`
	Data          string                 `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TestSuiteSource) Reset() {
	*x = TestSuiteSource{}
	mi := &file_pkg_server_server_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TestSuiteSource) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TestSuiteSource) ProtoMessage() {}

func (x *TestSuiteSource) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_server_server_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TestSuiteSource.ProtoReflect.Descriptor instead.
func (*TestSuiteSource) Descriptor() ([]byte, []int) {
	return file_pkg_server_server_proto_rawDescGZIP(), []int{8}
}

func (x *TestSuiteSource) GetKind() string {
	if x != nil {
		return x.Kind
	}
	return ""
}

func (x *TestSuiteSource) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

func (x *TestSuiteSource) GetData() string {
	if x != nil {
		return x.Data
	}
	return ""
}

type TestSuite struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Name          string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Api           string                 `protobuf:"bytes,2,opt,name=api,proto3" json:"api,omitempty"`
	Param         []*Pair                `protobuf:"bytes,3,rep,name=param,proto3" json:"param,omitempty"`
	Spec          *APISpec               `protobuf:"bytes,4,opt,name=spec,proto3" json:"spec,omitempty"`
	Proxy         *ProxyConfig           `protobuf:"bytes,5,opt,name=proxy,proto3" json:"proxy,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TestSuite) Reset() {
	*x = TestSuite{}
	mi := &file_pkg_server_server_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TestSuite) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TestSuite) ProtoMessage() {}

func (x *TestSuite) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_server_server_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TestSuite.ProtoReflect.Descriptor instead.
func (*TestSuite) Descriptor() ([]byte, []int) {
	return file_pkg_server_server_proto_rawDescGZIP(), []int{9}
}

func (x *TestSuite) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *TestSuite) GetApi() string {
	if x != nil {
		return x.Api
	}
	return ""
}

func (x *TestSuite) GetParam() []*Pair {
	if x != nil {
		return x.Param
	}
	return nil
}

func (x *TestSuite) GetSpec() *APISpec {
	if x != nil {
		return x.Spec
	}
	return nil
}

func (x *TestSuite) GetProxy() *ProxyConfig {
	if x != nil {
		return x.Proxy
	}
	return nil
}

type TestSuiteWithCase struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Suite         *TestSuite             `protobuf:"bytes,1,opt,name=suite,proto3" json:"suite,omitempty"`
	Case          *TestCase              `protobuf:"bytes,2,opt,name=case,proto3" json:"case,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TestSuiteWithCase) Reset() {
	*x = TestSuiteWithCase{}
	mi := &file_pkg_server_server_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TestSuiteWithCase) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TestSuiteWithCase) ProtoMessage() {}

func (x *TestSuiteWithCase) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_server_server_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TestSuiteWithCase.ProtoReflect.Descriptor instead.
func (*TestSuiteWithCase) Descriptor() ([]byte, []int) {
	return file_pkg_server_server_proto_rawDescGZIP(), []int{10}
}

func (x *TestSuiteWithCase) GetSuite() *TestSuite {
	if x != nil {
		return x.Suite
	}
	return nil
}

func (x *TestSuiteWithCase) GetCase() *TestCase {
	if x != nil {
		return x.Case
	}
	return nil
}

type APISpec struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Kind          string                 `protobuf:"bytes,1,opt,name=kind,proto3" json:"kind,omitempty"`
	Url           string                 `protobuf:"bytes,2,opt,name=url,proto3" json:"url,omitempty"`
	Rpc           *RPC                   `protobuf:"bytes,3,opt,name=rpc,proto3" json:"rpc,omitempty"`
	Secure        *Secure                `protobuf:"bytes,4,opt,name=secure,proto3" json:"secure,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *APISpec) Reset() {
	*x = APISpec{}
	mi := &file_pkg_server_server_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *APISpec) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*APISpec) ProtoMessage() {}

func (x *APISpec) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_server_server_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use APISpec.ProtoReflect.Descriptor instead.
func (*APISpec) Descriptor() ([]byte, []int) {
	return file_pkg_server_server_proto_rawDescGZIP(), []int{11}
}

func (x *APISpec) GetKind() string {
	if x != nil {
		return x.Kind
	}
	return ""
}

func (x *APISpec) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

func (x *APISpec) GetRpc() *RPC {
	if x != nil {
		return x.Rpc
	}
	return nil
}

func (x *APISpec) GetSecure() *Secure {
	if x != nil {
		return x.Secure
	}
	return nil
}

type Secure struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Insecure      bool                   `protobuf:"varint,1,opt,name=insecure,proto3" json:"insecure,omitempty"`
	Cert          string                 `protobuf:"bytes,2,opt,name=cert,proto3" json:"cert,omitempty"`
	Ca            string                 `protobuf:"bytes,3,opt,name=ca,proto3" json:"ca,omitempty"`
	ServerName    string                 `protobuf:"bytes,4,opt,name=serverName,proto3" json:"serverName,omitempty"`
	Key           string                 `protobuf:"bytes,5,opt,name=key,proto3" json:"key,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Secure) Reset() {
	*x = Secure{}
	mi := &file_pkg_server_server_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Secure) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Secure) ProtoMessage() {}

func (x *Secure) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_server_server_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Secure.ProtoReflect.Descriptor instead.
func (*Secure) Descriptor() ([]byte, []int) {
	return file_pkg_server_server_proto_rawDescGZIP(), []int{12}
}

func (x *Secure) GetInsecure() bool {
	if x != nil {
		return x.Insecure
	}
	return false
}

func (x *Secure) GetCert() string {
	if x != nil {
		return x.Cert
	}
	return ""
}

func (x *Secure) GetCa() string {
	if x != nil {
		return x.Ca
	}
	return ""
}

func (x *Secure) GetServerName() string {
	if x != nil {
		return x.ServerName
	}
	return ""
}

func (x *Secure) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

type RPC struct {
	state            protoimpl.MessageState `protogen:"open.v1"`
	Import           []string               `protobuf:"bytes,1,rep,name=import,proto3" json:"import,omitempty"`
	ServerReflection bool                   `protobuf:"varint,2,opt,name=serverReflection,proto3" json:"serverReflection,omitempty"`
	Protofile        string                 `protobuf:"bytes,3,opt,name=protofile,proto3" json:"protofile,omitempty"`
	Protoset         string                 `protobuf:"bytes,4,opt,name=protoset,proto3" json:"protoset,omitempty"`
	Raw              string                 `protobuf:"bytes,5,opt,name=raw,proto3" json:"raw,omitempty"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *RPC) Reset() {
	*x = RPC{}
	mi := &file_pkg_server_server_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RPC) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RPC) ProtoMessage() {}

func (x *RPC) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_server_server_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RPC.ProtoReflect.Descriptor instead.
func (*RPC) Descriptor() ([]byte, []int) {
	return file_pkg_server_server_proto_rawDescGZIP(), []int{13}
}

func (x *RPC) GetImport() []string {
	if x != nil {
		return x.Import
	}
	return nil
}

func (x *RPC) GetServerReflection() bool {
	if x != nil {
		return x.ServerReflection
	}
	return false
}

func (x *RPC) GetProtofile() string {
	if x != nil {
		return x.Protofile
	}
	return ""
}

func (x *RPC) GetProtoset() string {
	if x != nil {
		return x.Protoset
	}
	return ""
}

func (x *RPC) GetRaw() string {
	if x != nil {
		return x.Raw
	}
	return ""
}

type TestSuiteIdentity struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Name          string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Api           string                 `protobuf:"bytes,2,opt,name=api,proto3" json:"api,omitempty"`
	Kind          string                 `protobuf:"bytes,3,opt,name=kind,proto3" json:"kind,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TestSuiteIdentity) Reset() {
	*x = TestSuiteIdentity{}
	mi := &file_pkg_server_server_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TestSuiteIdentity) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TestSuiteIdentity) ProtoMessage() {}

func (x *TestSuiteIdentity) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_server_server_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TestSuiteIdentity.ProtoReflect.Descriptor instead.
func (*TestSuiteIdentity) Descriptor() ([]byte, []int) {
	return file_pkg_server_server_proto_rawDescGZIP(), []int{14}
}

func (x *TestSuiteIdentity) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *TestSuiteIdentity) GetApi() string {
	if x != nil {
		return x.Api
	}
	return ""
}

func (x *TestSuiteIdentity) GetKind() string {
	if x != nil {
		return x.Kind
	}
	return ""
}

type TestSuiteDuplicate struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	SourceSuiteName string                 `protobuf:"bytes,1,opt,name=sourceSuiteName,proto3" json:"sourceSuiteName,omitempty"`
	TargetSuiteName string                 `protobuf:"bytes,2,opt,name=targetSuiteName,proto3" json:"targetSuiteName,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *TestSuiteDuplicate) Reset() {
	*x = TestSuiteDuplicate{}
	mi := &file_pkg_server_server_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TestSuiteDuplicate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TestSuiteDuplicate) ProtoMessage() {}

func (x *TestSuiteDuplicate) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_server_server_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TestSuiteDuplicate.ProtoReflect.Descriptor instead.
func (*TestSuiteDuplicate) Descriptor() ([]byte, []int) {
	return file_pkg_server_server_proto_rawDescGZIP(), []int{15}
}

func (x *TestSuiteDuplicate) GetSourceSuiteName() string {
	if x != nil {
		return x.SourceSuiteName
	}
	return ""
}

func (x *TestSuiteDuplicate) GetTargetSuiteName() string {
	if x != nil {
		return x.TargetSuiteName
	}
	return ""
}

type TestCaseDuplicate struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	SourceSuiteName string                 `protobuf:"bytes,1,opt,name=sourceSuiteName,proto3" json:"sourceSuiteName,omitempty"`
	SourceCaseName  string                 `protobuf:"bytes,2,opt,name=sourceCaseName,proto3" json:"sourceCaseName,omitempty"`
	TargetSuiteName string                 `protobuf:"bytes,3,opt,name=targetSuiteName,proto3" json:"targetSuiteName,omitempty"`
	TargetCaseName  string                 `protobuf:"bytes,4,opt,name=targetCaseName,proto3" json:"targetCaseName,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *TestCaseDuplicate) Reset() {
	*x = TestCaseDuplicate{}
	mi := &file_pkg_server_server_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TestCaseDuplicate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TestCaseDuplicate) ProtoMessage() {}

func (x *TestCaseDuplicate) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_server_server_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TestCaseDuplicate.ProtoReflect.Descriptor instead.
func (*TestCaseDuplicate) Descriptor() ([]byte, []int) {
	return file_pkg_server_server_proto_rawDescGZIP(), []int{16}
}

func (x *TestCaseDuplicate) GetSourceSuiteName() string {
	if x != nil {
		return x.SourceSuiteName
	}
	return ""
}

func (x *TestCaseDuplicate) GetSourceCaseName() string {
	if x != nil {
		return x.SourceCaseName
	}
	return ""
}

func (x *TestCaseDuplicate) GetTargetSuiteName() string {
	if x != nil {
		return x.TargetSuiteName
	}
	return ""
}

func (x *TestCaseDuplicate) GetTargetCaseName() string {
	if x != nil {
		return x.TargetCaseName
	}
	return ""
}

type TestTask struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Data          string                 `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
	Kind          string                 `protobuf:"bytes,2,opt,name=kind,proto3" json:"kind,omitempty"`
	CaseName      string                 `protobuf:"bytes,3,opt,name=caseName,proto3" json:"caseName,omitempty"`
	Level         string                 `protobuf:"bytes,4,opt,name=level,proto3" json:"level,omitempty"`
	Env           map[string]string      `protobuf:"bytes,5,rep,name=env,proto3" json:"env,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	Parameters    []*Pair                `protobuf:"bytes,6,rep,name=parameters,proto3" json:"parameters,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TestTask) Reset() {
	*x = TestTask{}
	mi := &file_pkg_server_server_proto_msgTypes[17]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TestTask) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TestTask) ProtoMessage() {}

func (x *TestTask) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_server_server_proto_msgTypes[17]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TestTask.ProtoReflect.Descriptor instead.
func (*TestTask) Descriptor() ([]byte, []int) {
	return file_pkg_server_server_proto_rawDescGZIP(), []int{17}
}

func (x *TestTask) GetData() string {
	if x != nil {
		return x.Data
	}
	return ""
}

func (x *TestTask) GetKind() string {
	if x != nil {
		return x.Kind
	}
	return ""
}

func (x *TestTask) GetCaseName() string {
	if x != nil {
		return x.CaseName
	}
	return ""
}

func (x *TestTask) GetLevel() string {
	if x != nil {
		return x.Level
	}
	return ""
}

func (x *TestTask) GetEnv() map[string]string {
	if x != nil {
		return x.Env
	}
	return nil
}

func (x *TestTask) GetParameters() []*Pair {
	if x != nil {
		return x.Parameters
	}
	return nil
}

type BatchTestTask struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	SuiteName     string                 `protobuf:"bytes,1,opt,name=suiteName,proto3" json:"suiteName,omitempty"`
	CaseName      string                 `protobuf:"bytes,2,opt,name=caseName,proto3" json:"caseName,omitempty"`
	Parameters    []*Pair                `protobuf:"bytes,3,rep,name=parameters,proto3" json:"parameters,omitempty"`
	Count         int32                  `protobuf:"varint,4,opt,name=count,proto3" json:"count,omitempty"`
	Interval      string                 `protobuf:"bytes,5,opt,name=interval,proto3" json:"interval,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *BatchTestTask) Reset() {
	*x = BatchTestTask{}
	mi := &file_pkg_server_server_proto_msgTypes[18]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BatchTestTask) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BatchTestTask) ProtoMessage() {}

func (x *BatchTestTask) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_server_server_proto_msgTypes[18]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BatchTestTask.ProtoReflect.Descriptor instead.
func (*BatchTestTask) Descriptor() ([]byte, []int) {
	return file_pkg_server_server_proto_rawDescGZIP(), []int{18}
}

func (x *BatchTestTask) GetSuiteName() string {
	if x != nil {
		return x.SuiteName
	}
	return ""
}

func (x *BatchTestTask) GetCaseName() string {
	if x != nil {
		return x.CaseName
	}
	return ""
}

func (x *BatchTestTask) GetParameters() []*Pair {
	if x != nil {
		return x.Parameters
	}
	return nil
}

func (x *BatchTestTask) GetCount() int32 {
	if x != nil {
		return x.Count
	}
	return 0
}

func (x *BatchTestTask) GetInterval() string {
	if x != nil {
		return x.Interval
	}
	return ""
}

type TestResult struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	Message        string                 `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
	Error          string                 `protobuf:"bytes,2,opt,name=error,proto3" json:"error,omitempty"`
	TestCaseResult []*TestCaseResult      `protobuf:"bytes,3,rep,name=testCaseResult,proto3" json:"testCaseResult,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *TestResult) Reset() {
	*x = TestResult{}
	mi := &file_pkg_server_server_proto_msgTypes[19]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TestResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TestResult) ProtoMessage() {}

func (x *TestResult) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_server_server_proto_msgTypes[19]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TestResult.ProtoReflect.Descriptor instead.
func (*TestResult) Descriptor() ([]byte, []int) {
	return file_pkg_server_server_proto_rawDescGZIP(), []int{19}
}

func (x *TestResult) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *TestResult) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

func (x *TestResult) GetTestCaseResult() []*TestCaseResult {
	if x != nil {
		return x.TestCaseResult
	}
	return nil
}

type HistoryTestResult struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	Message        string                 `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
	Error          string                 `protobuf:"bytes,2,opt,name=error,proto3" json:"error,omitempty"`
	TestCaseResult []*TestCaseResult      `protobuf:"bytes,3,rep,name=testCaseResult,proto3" json:"testCaseResult,omitempty"`
	Data           *HistoryTestCase       `protobuf:"bytes,4,opt,name=data,proto3" json:"data,omitempty"`
	CreateTime     *timestamppb.Timestamp `protobuf:"bytes,5,opt,name=createTime,proto3" json:"createTime,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *HistoryTestResult) Reset() {
	*x = HistoryTestResult{}
	mi := &file_pkg_server_server_proto_msgTypes[20]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *HistoryTestResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HistoryTestResult) ProtoMessage() {}

func (x *HistoryTestResult) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_server_server_proto_msgTypes[20]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HistoryTestResult.ProtoReflect.Descriptor instead.
func (*HistoryTestResult) Descriptor() ([]byte, []int) {
	return file_pkg_server_server_proto_rawDescGZIP(), []int{20}
}

func (x *HistoryTestResult) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *HistoryTestResult) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

func (x *HistoryTestResult) GetTestCaseResult() []*TestCaseResult {
	if x != nil {
		return x.TestCaseResult
	}
	return nil
}

func (x *HistoryTestResult) GetData() *HistoryTestCase {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *HistoryTestResult) GetCreateTime() *timestamppb.Timestamp {
	if x != nil {
		return x.CreateTime
	}
	return nil
}

type HelloReply struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Message       string                 `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
	Error         string                 `protobuf:"bytes,2,opt,name=error,proto3" json:"error,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *HelloReply) Reset() {
	*x = HelloReply{}
	mi := &file_pkg_server_server_proto_msgTypes[21]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *HelloReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HelloReply) ProtoMessage() {}

func (x *HelloReply) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_server_server_proto_msgTypes[21]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HelloReply.ProtoReflect.Descriptor instead.
func (*HelloReply) Descriptor() ([]byte, []int) {
	return file_pkg_server_server_proto_rawDescGZIP(), []int{21}
}

func (x *HelloReply) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *HelloReply) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

type YamlData struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Data          []byte                 `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *YamlData) Reset() {
	*x = YamlData{}
	mi := &file_pkg_server_server_proto_msgTypes[22]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *YamlData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*YamlData) ProtoMessage() {}

func (x *YamlData) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_server_server_proto_msgTypes[22]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use YamlData.ProtoReflect.Descriptor instead.
func (*YamlData) Descriptor() ([]byte, []int) {
	return file_pkg_server_server_proto_rawDescGZIP(), []int{22}
}

func (x *YamlData) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

type Suite struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Name          string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Api           string                 `protobuf:"bytes,2,opt,name=api,proto3" json:"api,omitempty"`
	Items         []*TestCase            `protobuf:"bytes,3,rep,name=items,proto3" json:"items,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Suite) Reset() {
	*x = Suite{}
	mi := &file_pkg_server_server_proto_msgTypes[23]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Suite) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Suite) ProtoMessage() {}

func (x *Suite) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_server_server_proto_msgTypes[23]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Suite.ProtoReflect.Descriptor instead.
func (*Suite) Descriptor() ([]byte, []int) {
	return file_pkg_server_server_proto_rawDescGZIP(), []int{23}
}

func (x *Suite) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Suite) GetApi() string {
	if x != nil {
		return x.Api
	}
	return ""
}

func (x *Suite) GetItems() []*TestCase {
	if x != nil {
		return x.Items
	}
	return nil
}

type TestCaseWithSuite struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	SuiteName     string                 `protobuf:"bytes,1,opt,name=suiteName,proto3" json:"suiteName,omitempty"`
	Data          *TestCase              `protobuf:"bytes,2,opt,name=data,proto3" json:"data,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TestCaseWithSuite) Reset() {
	*x = TestCaseWithSuite{}
	mi := &file_pkg_server_server_proto_msgTypes[24]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TestCaseWithSuite) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TestCaseWithSuite) ProtoMessage() {}

func (x *TestCaseWithSuite) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_server_server_proto_msgTypes[24]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TestCaseWithSuite.ProtoReflect.Descriptor instead.
func (*TestCaseWithSuite) Descriptor() ([]byte, []int) {
	return file_pkg_server_server_proto_rawDescGZIP(), []int{24}
}

func (x *TestCaseWithSuite) GetSuiteName() string {
	if x != nil {
		return x.SuiteName
	}
	return ""
}

func (x *TestCaseWithSuite) GetData() *TestCase {
	if x != nil {
		return x.Data
	}
	return nil
}

type TestCases struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Data          []*TestCase            `protobuf:"bytes,1,rep,name=data,proto3" json:"data,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TestCases) Reset() {
	*x = TestCases{}
	mi := &file_pkg_server_server_proto_msgTypes[25]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TestCases) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TestCases) ProtoMessage() {}

func (x *TestCases) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_server_server_proto_msgTypes[25]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TestCases.ProtoReflect.Descriptor instead.
func (*TestCases) Descriptor() ([]byte, []int) {
	return file_pkg_server_server_proto_rawDescGZIP(), []int{25}
}

func (x *TestCases) GetData() []*TestCase {
	if x != nil {
		return x.Data
	}
	return nil
}

type TestCase struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Name          string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	SuiteName     string                 `protobuf:"bytes,2,opt,name=suiteName,proto3" json:"suiteName,omitempty"`
	Request       *Request               `protobuf:"bytes,3,opt,name=request,proto3" json:"request,omitempty"`
	Response      *Response              `protobuf:"bytes,4,opt,name=response,proto3" json:"response,omitempty"`
	Server        string                 `protobuf:"bytes,5,opt,name=server,proto3" json:"server,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TestCase) Reset() {
	*x = TestCase{}
	mi := &file_pkg_server_server_proto_msgTypes[26]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TestCase) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TestCase) ProtoMessage() {}

func (x *TestCase) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_server_server_proto_msgTypes[26]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TestCase.ProtoReflect.Descriptor instead.
func (*TestCase) Descriptor() ([]byte, []int) {
	return file_pkg_server_server_proto_rawDescGZIP(), []int{26}
}

func (x *TestCase) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *TestCase) GetSuiteName() string {
	if x != nil {
		return x.SuiteName
	}
	return ""
}

func (x *TestCase) GetRequest() *Request {
	if x != nil {
		return x.Request
	}
	return nil
}

func (x *TestCase) GetResponse() *Response {
	if x != nil {
		return x.Response
	}
	return nil
}

func (x *TestCase) GetServer() string {
	if x != nil {
		return x.Server
	}
	return ""
}

type HistoryTestCase struct {
	state            protoimpl.MessageState `protogen:"open.v1"`
	CaseName         string                 `protobuf:"bytes,1,opt,name=caseName,proto3" json:"caseName,omitempty"`
	SuiteName        string                 `protobuf:"bytes,2,opt,name=suiteName,proto3" json:"suiteName,omitempty"`
	HistorySuiteName string                 `protobuf:"bytes,3,opt,name=historySuiteName,proto3" json:"historySuiteName,omitempty"`
	CreateTime       *timestamppb.Timestamp `protobuf:"bytes,4,opt,name=createTime,proto3" json:"createTime,omitempty"`
	SuiteParam       []*Pair                `protobuf:"bytes,5,rep,name=suiteParam,proto3" json:"suiteParam,omitempty"`
	SuiteSpec        *APISpec               `protobuf:"bytes,6,opt,name=suiteSpec,proto3" json:"suiteSpec,omitempty"`
	SuiteApi         string                 `protobuf:"bytes,7,opt,name=suiteApi,proto3" json:"suiteApi,omitempty"`
	Request          *Request               `protobuf:"bytes,8,opt,name=request,proto3" json:"request,omitempty"`
	Response         *Response              `protobuf:"bytes,9,opt,name=response,proto3" json:"response,omitempty"`
	ID               string                 `protobuf:"bytes,10,opt,name=ID,proto3" json:"ID,omitempty"`
	HistoryHeader    []*Pair                `protobuf:"bytes,11,rep,name=historyHeader,proto3" json:"historyHeader,omitempty"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *HistoryTestCase) Reset() {
	*x = HistoryTestCase{}
	mi := &file_pkg_server_server_proto_msgTypes[27]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *HistoryTestCase) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HistoryTestCase) ProtoMessage() {}

func (x *HistoryTestCase) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_server_server_proto_msgTypes[27]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HistoryTestCase.ProtoReflect.Descriptor instead.
func (*HistoryTestCase) Descriptor() ([]byte, []int) {
	return file_pkg_server_server_proto_rawDescGZIP(), []int{27}
}

func (x *HistoryTestCase) GetCaseName() string {
	if x != nil {
		return x.CaseName
	}
	return ""
}

func (x *HistoryTestCase) GetSuiteName() string {
	if x != nil {
		return x.SuiteName
	}
	return ""
}

func (x *HistoryTestCase) GetHistorySuiteName() string {
	if x != nil {
		return x.HistorySuiteName
	}
	return ""
}

func (x *HistoryTestCase) GetCreateTime() *timestamppb.Timestamp {
	if x != nil {
		return x.CreateTime
	}
	return nil
}

func (x *HistoryTestCase) GetSuiteParam() []*Pair {
	if x != nil {
		return x.SuiteParam
	}
	return nil
}

func (x *HistoryTestCase) GetSuiteSpec() *APISpec {
	if x != nil {
		return x.SuiteSpec
	}
	return nil
}

func (x *HistoryTestCase) GetSuiteApi() string {
	if x != nil {
		return x.SuiteApi
	}
	return ""
}

func (x *HistoryTestCase) GetRequest() *Request {
	if x != nil {
		return x.Request
	}
	return nil
}

func (x *HistoryTestCase) GetResponse() *Response {
	if x != nil {
		return x.Response
	}
	return nil
}

func (x *HistoryTestCase) GetID() string {
	if x != nil {
		return x.ID
	}
	return ""
}

func (x *HistoryTestCase) GetHistoryHeader() []*Pair {
	if x != nil {
		return x.HistoryHeader
	}
	return nil
}

type HistoryTestCases struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Data          []*HistoryTestCase     `protobuf:"bytes,1,rep,name=data,proto3" json:"data,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *HistoryTestCases) Reset() {
	*x = HistoryTestCases{}
	mi := &file_pkg_server_server_proto_msgTypes[28]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *HistoryTestCases) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HistoryTestCases) ProtoMessage() {}

func (x *HistoryTestCases) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_server_server_proto_msgTypes[28]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HistoryTestCases.ProtoReflect.Descriptor instead.
func (*HistoryTestCases) Descriptor() ([]byte, []int) {
	return file_pkg_server_server_proto_rawDescGZIP(), []int{28}
}

func (x *HistoryTestCases) GetData() []*HistoryTestCase {
	if x != nil {
		return x.Data
	}
	return nil
}

type Request struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Api           string                 `protobuf:"bytes,1,opt,name=api,proto3" json:"api,omitempty"`
	Method        string                 `protobuf:"bytes,2,opt,name=method,proto3" json:"method,omitempty"`
	Header        []*Pair                `protobuf:"bytes,3,rep,name=header,proto3" json:"header,omitempty"`
	Query         []*Pair                `protobuf:"bytes,4,rep,name=query,proto3" json:"query,omitempty"`
	Cookie        []*Pair                `protobuf:"bytes,5,rep,name=cookie,proto3" json:"cookie,omitempty"`
	Form          []*Pair                `protobuf:"bytes,6,rep,name=form,proto3" json:"form,omitempty"`
	Body          string                 `protobuf:"bytes,7,opt,name=body,proto3" json:"body,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Request) Reset() {
	*x = Request{}
	mi := &file_pkg_server_server_proto_msgTypes[29]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Request) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Request) ProtoMessage() {}

func (x *Request) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_server_server_proto_msgTypes[29]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Request.ProtoReflect.Descriptor instead.
func (*Request) Descriptor() ([]byte, []int) {
	return file_pkg_server_server_proto_rawDescGZIP(), []int{29}
}

func (x *Request) GetApi() string {
	if x != nil {
		return x.Api
	}
	return ""
}

func (x *Request) GetMethod() string {
	if x != nil {
		return x.Method
	}
	return ""
}

func (x *Request) GetHeader() []*Pair {
	if x != nil {
		return x.Header
	}
	return nil
}

func (x *Request) GetQuery() []*Pair {
	if x != nil {
		return x.Query
	}
	return nil
}

func (x *Request) GetCookie() []*Pair {
	if x != nil {
		return x.Cookie
	}
	return nil
}

func (x *Request) GetForm() []*Pair {
	if x != nil {
		return x.Form
	}
	return nil
}

func (x *Request) GetBody() string {
	if x != nil {
		return x.Body
	}
	return ""
}

type Response struct {
	state             protoimpl.MessageState `protogen:"open.v1"`
	StatusCode        int32                  `protobuf:"varint,1,opt,name=statusCode,proto3" json:"statusCode,omitempty"`
	Body              string                 `protobuf:"bytes,2,opt,name=body,proto3" json:"body,omitempty"`
	Header            []*Pair                `protobuf:"bytes,3,rep,name=header,proto3" json:"header,omitempty"`
	BodyFieldsExpect  []*Pair                `protobuf:"bytes,4,rep,name=bodyFieldsExpect,proto3" json:"bodyFieldsExpect,omitempty"`
	Verify            []string               `protobuf:"bytes,5,rep,name=verify,proto3" json:"verify,omitempty"`
	ConditionalVerify []*ConditionalVerify   `protobuf:"bytes,6,rep,name=ConditionalVerify,proto3" json:"ConditionalVerify,omitempty"`
	Schema            string                 `protobuf:"bytes,7,opt,name=schema,proto3" json:"schema,omitempty"`
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *Response) Reset() {
	*x = Response{}
	mi := &file_pkg_server_server_proto_msgTypes[30]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Response) ProtoMessage() {}

func (x *Response) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_server_server_proto_msgTypes[30]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Response.ProtoReflect.Descriptor instead.
func (*Response) Descriptor() ([]byte, []int) {
	return file_pkg_server_server_proto_rawDescGZIP(), []int{30}
}

func (x *Response) GetStatusCode() int32 {
	if x != nil {
		return x.StatusCode
	}
	return 0
}

func (x *Response) GetBody() string {
	if x != nil {
		return x.Body
	}
	return ""
}

func (x *Response) GetHeader() []*Pair {
	if x != nil {
		return x.Header
	}
	return nil
}

func (x *Response) GetBodyFieldsExpect() []*Pair {
	if x != nil {
		return x.BodyFieldsExpect
	}
	return nil
}

func (x *Response) GetVerify() []string {
	if x != nil {
		return x.Verify
	}
	return nil
}

func (x *Response) GetConditionalVerify() []*ConditionalVerify {
	if x != nil {
		return x.ConditionalVerify
	}
	return nil
}

func (x *Response) GetSchema() string {
	if x != nil {
		return x.Schema
	}
	return ""
}

type ConditionalVerify struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Condition     []string               `protobuf:"bytes,1,rep,name=condition,proto3" json:"condition,omitempty"`
	Verify        []string               `protobuf:"bytes,2,rep,name=verify,proto3" json:"verify,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ConditionalVerify) Reset() {
	*x = ConditionalVerify{}
	mi := &file_pkg_server_server_proto_msgTypes[31]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ConditionalVerify) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConditionalVerify) ProtoMessage() {}

func (x *ConditionalVerify) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_server_server_proto_msgTypes[31]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConditionalVerify.ProtoReflect.Descriptor instead.
func (*ConditionalVerify) Descriptor() ([]byte, []int) {
	return file_pkg_server_server_proto_rawDescGZIP(), []int{31}
}

func (x *ConditionalVerify) GetCondition() []string {
	if x != nil {
		return x.Condition
	}
	return nil
}

func (x *ConditionalVerify) GetVerify() []string {
	if x != nil {
		return x.Verify
	}
	return nil
}

type TestCaseResult struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	StatusCode    int32                  `protobuf:"varint,1,opt,name=statusCode,proto3" json:"statusCode,omitempty"`
	Body          string                 `protobuf:"bytes,2,opt,name=body,proto3" json:"body,omitempty"`
	Header        []*Pair                `protobuf:"bytes,3,rep,name=header,proto3" json:"header,omitempty"`
	Error         string                 `protobuf:"bytes,4,opt,name=error,proto3" json:"error,omitempty"`
	Id            string                 `protobuf:"bytes,5,opt,name=id,proto3" json:"id,omitempty"`
	Output        string                 `protobuf:"bytes,6,opt,name=output,proto3" json:"output,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TestCaseResult) Reset() {
	*x = TestCaseResult{}
	mi := &file_pkg_server_server_proto_msgTypes[32]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TestCaseResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TestCaseResult) ProtoMessage() {}

func (x *TestCaseResult) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_server_server_proto_msgTypes[32]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TestCaseResult.ProtoReflect.Descriptor instead.
func (*TestCaseResult) Descriptor() ([]byte, []int) {
	return file_pkg_server_server_proto_rawDescGZIP(), []int{32}
}

func (x *TestCaseResult) GetStatusCode() int32 {
	if x != nil {
		return x.StatusCode
	}
	return 0
}

func (x *TestCaseResult) GetBody() string {
	if x != nil {
		return x.Body
	}
	return ""
}

func (x *TestCaseResult) GetHeader() []*Pair {
	if x != nil {
		return x.Header
	}
	return nil
}

func (x *TestCaseResult) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

func (x *TestCaseResult) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *TestCaseResult) GetOutput() string {
	if x != nil {
		return x.Output
	}
	return ""
}

type Pair struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Key           string                 `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	Value         string                 `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`
	Description   string                 `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Pair) Reset() {
	*x = Pair{}
	mi := &file_pkg_server_server_proto_msgTypes[33]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Pair) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Pair) ProtoMessage() {}

func (x *Pair) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_server_server_proto_msgTypes[33]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Pair.ProtoReflect.Descriptor instead.
func (*Pair) Descriptor() ([]byte, []int) {
	return file_pkg_server_server_proto_rawDescGZIP(), []int{33}
}

func (x *Pair) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *Pair) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

func (x *Pair) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

type Pairs struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Data          []*Pair                `protobuf:"bytes,1,rep,name=data,proto3" json:"data,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Pairs) Reset() {
	*x = Pairs{}
	mi := &file_pkg_server_server_proto_msgTypes[34]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Pairs) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Pairs) ProtoMessage() {}

func (x *Pairs) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_server_server_proto_msgTypes[34]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Pairs.ProtoReflect.Descriptor instead.
func (*Pairs) Descriptor() ([]byte, []int) {
	return file_pkg_server_server_proto_rawDescGZIP(), []int{34}
}

func (x *Pairs) GetData() []*Pair {
	if x != nil {
		return x.Data
	}
	return nil
}

type SimpleQuery struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Name          string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Kind          string                 `protobuf:"bytes,2,opt,name=kind,proto3" json:"kind,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SimpleQuery) Reset() {
	*x = SimpleQuery{}
	mi := &file_pkg_server_server_proto_msgTypes[35]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SimpleQuery) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SimpleQuery) ProtoMessage() {}

func (x *SimpleQuery) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_server_server_proto_msgTypes[35]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SimpleQuery.ProtoReflect.Descriptor instead.
func (*SimpleQuery) Descriptor() ([]byte, []int) {
	return file_pkg_server_server_proto_rawDescGZIP(), []int{35}
}

func (x *SimpleQuery) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *SimpleQuery) GetKind() string {
	if x != nil {
		return x.Kind
	}
	return ""
}

type Stores struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Data          []*Store               `protobuf:"bytes,1,rep,name=data,proto3" json:"data,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Stores) Reset() {
	*x = Stores{}
	mi := &file_pkg_server_server_proto_msgTypes[36]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Stores) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Stores) ProtoMessage() {}

func (x *Stores) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_server_server_proto_msgTypes[36]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Stores.ProtoReflect.Descriptor instead.
func (*Stores) Descriptor() ([]byte, []int) {
	return file_pkg_server_server_proto_rawDescGZIP(), []int{36}
}

func (x *Stores) GetData() []*Store {
	if x != nil {
		return x.Data
	}
	return nil
}

type Store struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Name          string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Owner         string                 `protobuf:"bytes,2,opt,name=owner,proto3" json:"owner,omitempty"`
	Description   string                 `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	Url           string                 `protobuf:"bytes,4,opt,name=url,proto3" json:"url,omitempty"`
	Username      string                 `protobuf:"bytes,5,opt,name=username,proto3" json:"username,omitempty"`
	Password      string                 `protobuf:"bytes,6,opt,name=password,proto3" json:"password,omitempty"`
	Properties    []*Pair                `protobuf:"bytes,7,rep,name=properties,proto3" json:"properties,omitempty"`
	Kind          *StoreKind             `protobuf:"bytes,8,opt,name=kind,proto3" json:"kind,omitempty"`
	Ready         bool                   `protobuf:"varint,9,opt,name=ready,proto3" json:"ready,omitempty"`
	ReadOnly      bool                   `protobuf:"varint,10,opt,name=readOnly,proto3" json:"readOnly,omitempty"`
	Disabled      bool                   `protobuf:"varint,11,opt,name=disabled,proto3" json:"disabled,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Store) Reset() {
	*x = Store{}
	mi := &file_pkg_server_server_proto_msgTypes[37]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Store) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Store) ProtoMessage() {}

func (x *Store) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_server_server_proto_msgTypes[37]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Store.ProtoReflect.Descriptor instead.
func (*Store) Descriptor() ([]byte, []int) {
	return file_pkg_server_server_proto_rawDescGZIP(), []int{37}
}

func (x *Store) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Store) GetOwner() string {
	if x != nil {
		return x.Owner
	}
	return ""
}

func (x *Store) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *Store) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

func (x *Store) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *Store) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

func (x *Store) GetProperties() []*Pair {
	if x != nil {
		return x.Properties
	}
	return nil
}

func (x *Store) GetKind() *StoreKind {
	if x != nil {
		return x.Kind
	}
	return nil
}

func (x *Store) GetReady() bool {
	if x != nil {
		return x.Ready
	}
	return false
}

func (x *Store) GetReadOnly() bool {
	if x != nil {
		return x.ReadOnly
	}
	return false
}

func (x *Store) GetDisabled() bool {
	if x != nil {
		return x.Disabled
	}
	return false
}

type StoreKinds struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Data          []*StoreKind           `protobuf:"bytes,1,rep,name=data,proto3" json:"data,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StoreKinds) Reset() {
	*x = StoreKinds{}
	mi := &file_pkg_server_server_proto_msgTypes[38]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StoreKinds) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StoreKinds) ProtoMessage() {}

func (x *StoreKinds) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_server_server_proto_msgTypes[38]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StoreKinds.ProtoReflect.Descriptor instead.
func (*StoreKinds) Descriptor() ([]byte, []int) {
	return file_pkg_server_server_proto_rawDescGZIP(), []int{38}
}

func (x *StoreKinds) GetData() []*StoreKind {
	if x != nil {
		return x.Data
	}
	return nil
}

type StoreKind struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Name          string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Url           string                 `protobuf:"bytes,2,opt,name=url,proto3" json:"url,omitempty"`
	Enabled       bool                   `protobuf:"varint,3,opt,name=enabled,proto3" json:"enabled,omitempty"`
	Dependencies  []*StoreKindDependency `protobuf:"bytes,4,rep,name=dependencies,proto3" json:"dependencies,omitempty"`
	Link          string                 `protobuf:"bytes,5,opt,name=link,proto3" json:"link,omitempty"`
	Params        []*StoreKindParam      `protobuf:"bytes,6,rep,name=params,proto3" json:"params,omitempty"`
	Categories    []string               `protobuf:"bytes,7,rep,name=categories,proto3" json:"categories,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StoreKind) Reset() {
	*x = StoreKind{}
	mi := &file_pkg_server_server_proto_msgTypes[39]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StoreKind) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StoreKind) ProtoMessage() {}

func (x *StoreKind) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_server_server_proto_msgTypes[39]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StoreKind.ProtoReflect.Descriptor instead.
func (*StoreKind) Descriptor() ([]byte, []int) {
	return file_pkg_server_server_proto_rawDescGZIP(), []int{39}
}

func (x *StoreKind) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *StoreKind) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

func (x *StoreKind) GetEnabled() bool {
	if x != nil {
		return x.Enabled
	}
	return false
}

func (x *StoreKind) GetDependencies() []*StoreKindDependency {
	if x != nil {
		return x.Dependencies
	}
	return nil
}

func (x *StoreKind) GetLink() string {
	if x != nil {
		return x.Link
	}
	return ""
}

func (x *StoreKind) GetParams() []*StoreKindParam {
	if x != nil {
		return x.Params
	}
	return nil
}

func (x *StoreKind) GetCategories() []string {
	if x != nil {
		return x.Categories
	}
	return nil
}

type StoreKindDependency struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Name          string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StoreKindDependency) Reset() {
	*x = StoreKindDependency{}
	mi := &file_pkg_server_server_proto_msgTypes[40]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StoreKindDependency) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StoreKindDependency) ProtoMessage() {}

func (x *StoreKindDependency) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_server_server_proto_msgTypes[40]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StoreKindDependency.ProtoReflect.Descriptor instead.
func (*StoreKindDependency) Descriptor() ([]byte, []int) {
	return file_pkg_server_server_proto_rawDescGZIP(), []int{40}
}

func (x *StoreKindDependency) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type StoreKindParam struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Key           string                 `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	Description   string                 `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	DefaultValue  string                 `protobuf:"bytes,3,opt,name=defaultValue,proto3" json:"defaultValue,omitempty"`
	Enum          []string               `protobuf:"bytes,4,rep,name=enum,proto3" json:"enum,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StoreKindParam) Reset() {
	*x = StoreKindParam{}
	mi := &file_pkg_server_server_proto_msgTypes[41]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StoreKindParam) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StoreKindParam) ProtoMessage() {}

func (x *StoreKindParam) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_server_server_proto_msgTypes[41]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StoreKindParam.ProtoReflect.Descriptor instead.
func (*StoreKindParam) Descriptor() ([]byte, []int) {
	return file_pkg_server_server_proto_rawDescGZIP(), []int{41}
}

func (x *StoreKindParam) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *StoreKindParam) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *StoreKindParam) GetDefaultValue() string {
	if x != nil {
		return x.DefaultValue
	}
	return ""
}

func (x *StoreKindParam) GetEnum() []string {
	if x != nil {
		return x.Enum
	}
	return nil
}

type CommonResult struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Message       string                 `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CommonResult) Reset() {
	*x = CommonResult{}
	mi := &file_pkg_server_server_proto_msgTypes[42]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CommonResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CommonResult) ProtoMessage() {}

func (x *CommonResult) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_server_server_proto_msgTypes[42]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CommonResult.ProtoReflect.Descriptor instead.
func (*CommonResult) Descriptor() ([]byte, []int) {
	return file_pkg_server_server_proto_rawDescGZIP(), []int{42}
}

func (x *CommonResult) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *CommonResult) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type SimpleList struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Data          []*Pair                `protobuf:"bytes,1,rep,name=data,proto3" json:"data,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SimpleList) Reset() {
	*x = SimpleList{}
	mi := &file_pkg_server_server_proto_msgTypes[43]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SimpleList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SimpleList) ProtoMessage() {}

func (x *SimpleList) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_server_server_proto_msgTypes[43]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SimpleList.ProtoReflect.Descriptor instead.
func (*SimpleList) Descriptor() ([]byte, []int) {
	return file_pkg_server_server_proto_rawDescGZIP(), []int{43}
}

func (x *SimpleList) GetData() []*Pair {
	if x != nil {
		return x.Data
	}
	return nil
}

type SimpleName struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Name          string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SimpleName) Reset() {
	*x = SimpleName{}
	mi := &file_pkg_server_server_proto_msgTypes[44]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SimpleName) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SimpleName) ProtoMessage() {}

func (x *SimpleName) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_server_server_proto_msgTypes[44]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SimpleName.ProtoReflect.Descriptor instead.
func (*SimpleName) Descriptor() ([]byte, []int) {
	return file_pkg_server_server_proto_rawDescGZIP(), []int{44}
}

func (x *SimpleName) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type CodeGenerateRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	TestSuite     string                 `protobuf:"bytes,1,opt,name=TestSuite,proto3" json:"TestSuite,omitempty"`
	TestCase      string                 `protobuf:"bytes,2,opt,name=TestCase,proto3" json:"TestCase,omitempty"`
	Generator     string                 `protobuf:"bytes,3,opt,name=Generator,proto3" json:"Generator,omitempty"`
	ID            string                 `protobuf:"bytes,4,opt,name=ID,proto3" json:"ID,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CodeGenerateRequest) Reset() {
	*x = CodeGenerateRequest{}
	mi := &file_pkg_server_server_proto_msgTypes[45]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CodeGenerateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CodeGenerateRequest) ProtoMessage() {}

func (x *CodeGenerateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_server_server_proto_msgTypes[45]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CodeGenerateRequest.ProtoReflect.Descriptor instead.
func (*CodeGenerateRequest) Descriptor() ([]byte, []int) {
	return file_pkg_server_server_proto_rawDescGZIP(), []int{45}
}

func (x *CodeGenerateRequest) GetTestSuite() string {
	if x != nil {
		return x.TestSuite
	}
	return ""
}

func (x *CodeGenerateRequest) GetTestCase() string {
	if x != nil {
		return x.TestCase
	}
	return ""
}

func (x *CodeGenerateRequest) GetGenerator() string {
	if x != nil {
		return x.Generator
	}
	return ""
}

func (x *CodeGenerateRequest) GetID() string {
	if x != nil {
		return x.ID
	}
	return ""
}

type Secrets struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Data          []*Secret              `protobuf:"bytes,1,rep,name=data,proto3" json:"data,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Secrets) Reset() {
	*x = Secrets{}
	mi := &file_pkg_server_server_proto_msgTypes[46]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Secrets) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Secrets) ProtoMessage() {}

func (x *Secrets) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_server_server_proto_msgTypes[46]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Secrets.ProtoReflect.Descriptor instead.
func (*Secrets) Descriptor() ([]byte, []int) {
	return file_pkg_server_server_proto_rawDescGZIP(), []int{46}
}

func (x *Secrets) GetData() []*Secret {
	if x != nil {
		return x.Data
	}
	return nil
}

type Secret struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Name          string                 `protobuf:"bytes,1,opt,name=Name,proto3" json:"Name,omitempty"`
	Value         string                 `protobuf:"bytes,2,opt,name=Value,proto3" json:"Value,omitempty"`
	Description   string                 `protobuf:"bytes,3,opt,name=Description,proto3" json:"Description,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Secret) Reset() {
	*x = Secret{}
	mi := &file_pkg_server_server_proto_msgTypes[47]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Secret) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Secret) ProtoMessage() {}

func (x *Secret) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_server_server_proto_msgTypes[47]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Secret.ProtoReflect.Descriptor instead.
func (*Secret) Descriptor() ([]byte, []int) {
	return file_pkg_server_server_proto_rawDescGZIP(), []int{47}
}

func (x *Secret) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Secret) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

func (x *Secret) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

type ExtensionStatus struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Ready         bool                   `protobuf:"varint,1,opt,name=ready,proto3" json:"ready,omitempty"`
	ReadOnly      bool                   `protobuf:"varint,2,opt,name=readOnly,proto3" json:"readOnly,omitempty"`
	Version       string                 `protobuf:"bytes,3,opt,name=version,proto3" json:"version,omitempty"`
	Message       string                 `protobuf:"bytes,4,opt,name=message,proto3" json:"message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ExtensionStatus) Reset() {
	*x = ExtensionStatus{}
	mi := &file_pkg_server_server_proto_msgTypes[48]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ExtensionStatus) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExtensionStatus) ProtoMessage() {}

func (x *ExtensionStatus) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_server_server_proto_msgTypes[48]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExtensionStatus.ProtoReflect.Descriptor instead.
func (*ExtensionStatus) Descriptor() ([]byte, []int) {
	return file_pkg_server_server_proto_rawDescGZIP(), []int{48}
}

func (x *ExtensionStatus) GetReady() bool {
	if x != nil {
		return x.Ready
	}
	return false
}

func (x *ExtensionStatus) GetReadOnly() bool {
	if x != nil {
		return x.ReadOnly
	}
	return false
}

func (x *ExtensionStatus) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

func (x *ExtensionStatus) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type PProfRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Name          string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PProfRequest) Reset() {
	*x = PProfRequest{}
	mi := &file_pkg_server_server_proto_msgTypes[49]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PProfRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PProfRequest) ProtoMessage() {}

func (x *PProfRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_server_server_proto_msgTypes[49]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PProfRequest.ProtoReflect.Descriptor instead.
func (*PProfRequest) Descriptor() ([]byte, []int) {
	return file_pkg_server_server_proto_rawDescGZIP(), []int{49}
}

func (x *PProfRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type PProfData struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Data          []byte                 `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PProfData) Reset() {
	*x = PProfData{}
	mi := &file_pkg_server_server_proto_msgTypes[50]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PProfData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PProfData) ProtoMessage() {}

func (x *PProfData) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_server_server_proto_msgTypes[50]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PProfData.ProtoReflect.Descriptor instead.
func (*PProfData) Descriptor() ([]byte, []int) {
	return file_pkg_server_server_proto_rawDescGZIP(), []int{50}
}

func (x *PProfData) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

type FileData struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Data          []byte                 `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
	ContentType   string                 `protobuf:"bytes,2,opt,name=content_type,json=contentType,proto3" json:"content_type,omitempty"`
	Filename      string                 `protobuf:"bytes,3,opt,name=filename,proto3" json:"filename,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *FileData) Reset() {
	*x = FileData{}
	mi := &file_pkg_server_server_proto_msgTypes[51]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FileData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FileData) ProtoMessage() {}

func (x *FileData) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_server_server_proto_msgTypes[51]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FileData.ProtoReflect.Descriptor instead.
func (*FileData) Descriptor() ([]byte, []int) {
	return file_pkg_server_server_proto_rawDescGZIP(), []int{51}
}

func (x *FileData) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *FileData) GetContentType() string {
	if x != nil {
		return x.ContentType
	}
	return ""
}

func (x *FileData) GetFilename() string {
	if x != nil {
		return x.Filename
	}
	return ""
}

type Empty struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Empty) Reset() {
	*x = Empty{}
	mi := &file_pkg_server_server_proto_msgTypes[52]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Empty) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Empty) ProtoMessage() {}

func (x *Empty) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_server_server_proto_msgTypes[52]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Empty.ProtoReflect.Descriptor instead.
func (*Empty) Descriptor() ([]byte, []int) {
	return file_pkg_server_server_proto_rawDescGZIP(), []int{52}
}

type MockConfig struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	Prefix         string                 `protobuf:"bytes,1,opt,name=Prefix,proto3" json:"Prefix,omitempty"`
	Config         string                 `protobuf:"bytes,2,opt,name=Config,proto3" json:"Config,omitempty"`
	Port           int32                  `protobuf:"varint,3,opt,name=Port,proto3" json:"Port,omitempty"`
	StoreKind      string                 `protobuf:"bytes,4,opt,name=storeKind,proto3" json:"storeKind,omitempty"`
	StoreLocalFile string                 `protobuf:"bytes,5,opt,name=storeLocalFile,proto3" json:"storeLocalFile,omitempty"`
	StoreURL       string                 `protobuf:"bytes,6,opt,name=storeURL,proto3" json:"storeURL,omitempty"`
	StoreRemote    string                 `protobuf:"bytes,7,opt,name=storeRemote,proto3" json:"storeRemote,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *MockConfig) Reset() {
	*x = MockConfig{}
	mi := &file_pkg_server_server_proto_msgTypes[53]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MockConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MockConfig) ProtoMessage() {}

func (x *MockConfig) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_server_server_proto_msgTypes[53]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MockConfig.ProtoReflect.Descriptor instead.
func (*MockConfig) Descriptor() ([]byte, []int) {
	return file_pkg_server_server_proto_rawDescGZIP(), []int{53}
}

func (x *MockConfig) GetPrefix() string {
	if x != nil {
		return x.Prefix
	}
	return ""
}

func (x *MockConfig) GetConfig() string {
	if x != nil {
		return x.Config
	}
	return ""
}

func (x *MockConfig) GetPort() int32 {
	if x != nil {
		return x.Port
	}
	return 0
}

func (x *MockConfig) GetStoreKind() string {
	if x != nil {
		return x.StoreKind
	}
	return ""
}

func (x *MockConfig) GetStoreLocalFile() string {
	if x != nil {
		return x.StoreLocalFile
	}
	return ""
}

func (x *MockConfig) GetStoreURL() string {
	if x != nil {
		return x.StoreURL
	}
	return ""
}

func (x *MockConfig) GetStoreRemote() string {
	if x != nil {
		return x.StoreRemote
	}
	return ""
}

type Version struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Version       string                 `protobuf:"bytes,1,opt,name=version,proto3" json:"version,omitempty"`
	Commit        string                 `protobuf:"bytes,2,opt,name=commit,proto3" json:"commit,omitempty"`
	Date          string                 `protobuf:"bytes,3,opt,name=date,proto3" json:"date,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Version) Reset() {
	*x = Version{}
	mi := &file_pkg_server_server_proto_msgTypes[54]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Version) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Version) ProtoMessage() {}

func (x *Version) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_server_server_proto_msgTypes[54]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Version.ProtoReflect.Descriptor instead.
func (*Version) Descriptor() ([]byte, []int) {
	return file_pkg_server_server_proto_rawDescGZIP(), []int{54}
}

func (x *Version) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

func (x *Version) GetCommit() string {
	if x != nil {
		return x.Commit
	}
	return ""
}

func (x *Version) GetDate() string {
	if x != nil {
		return x.Date
	}
	return ""
}

type ProxyConfig struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Http          string                 `protobuf:"bytes,1,opt,name=http,proto3" json:"http,omitempty"`   // HTTP proxy URL
	Https         string                 `protobuf:"bytes,2,opt,name=https,proto3" json:"https,omitempty"` // HTTPS proxy URL
	No            string                 `protobuf:"bytes,3,opt,name=no,proto3" json:"no,omitempty"`       // Comma-separated list of hosts to exclude from proxying
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ProxyConfig) Reset() {
	*x = ProxyConfig{}
	mi := &file_pkg_server_server_proto_msgTypes[55]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ProxyConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProxyConfig) ProtoMessage() {}

func (x *ProxyConfig) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_server_server_proto_msgTypes[55]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProxyConfig.ProtoReflect.Descriptor instead.
func (*ProxyConfig) Descriptor() ([]byte, []int) {
	return file_pkg_server_server_proto_rawDescGZIP(), []int{55}
}

func (x *ProxyConfig) GetHttp() string {
	if x != nil {
		return x.Http
	}
	return ""
}

func (x *ProxyConfig) GetHttps() string {
	if x != nil {
		return x.Https
	}
	return ""
}

func (x *ProxyConfig) GetNo() string {
	if x != nil {
		return x.No
	}
	return ""
}

type DataQuery struct {
	state  protoimpl.MessageState `protogen:"open.v1"`
	Type   string                 `protobuf:"bytes,1,opt,name=type,proto3" json:"type,omitempty"`
	Key    string                 `protobuf:"bytes,2,opt,name=key,proto3" json:"key,omitempty"`
	Sql    string                 `protobuf:"bytes,3,opt,name=sql,proto3" json:"sql,omitempty"`
	Offset int64                  `protobuf:"varint,4,opt,name=offset,proto3" json:"offset,omitempty"`
	Limit  int64                  `protobuf:"varint,5,opt,name=limit,proto3" json:"limit,omitempty"`
	// AI extensions starting from field 10
	NaturalLanguage string            `protobuf:"bytes,10,opt,name=natural_language,json=naturalLanguage,proto3" json:"natural_language,omitempty"`
	DatabaseType    string            `protobuf:"bytes,11,opt,name=database_type,json=databaseType,proto3" json:"database_type,omitempty"`
	ExplainQuery    bool              `protobuf:"varint,12,opt,name=explain_query,json=explainQuery,proto3" json:"explain_query,omitempty"`
	AiContext       map[string]string `protobuf:"bytes,13,rep,name=ai_context,json=aiContext,proto3" json:"ai_context,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *DataQuery) Reset() {
	*x = DataQuery{}
	mi := &file_pkg_server_server_proto_msgTypes[56]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DataQuery) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DataQuery) ProtoMessage() {}

func (x *DataQuery) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_server_server_proto_msgTypes[56]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DataQuery.ProtoReflect.Descriptor instead.
func (*DataQuery) Descriptor() ([]byte, []int) {
	return file_pkg_server_server_proto_rawDescGZIP(), []int{56}
}

func (x *DataQuery) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *DataQuery) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *DataQuery) GetSql() string {
	if x != nil {
		return x.Sql
	}
	return ""
}

func (x *DataQuery) GetOffset() int64 {
	if x != nil {
		return x.Offset
	}
	return 0
}

func (x *DataQuery) GetLimit() int64 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *DataQuery) GetNaturalLanguage() string {
	if x != nil {
		return x.NaturalLanguage
	}
	return ""
}

func (x *DataQuery) GetDatabaseType() string {
	if x != nil {
		return x.DatabaseType
	}
	return ""
}

func (x *DataQuery) GetExplainQuery() bool {
	if x != nil {
		return x.ExplainQuery
	}
	return false
}

func (x *DataQuery) GetAiContext() map[string]string {
	if x != nil {
		return x.AiContext
	}
	return nil
}

type DataQueryResult struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	Data  []*Pair                `protobuf:"bytes,1,rep,name=data,proto3" json:"data,omitempty"`
	Items []*Pairs               `protobuf:"bytes,2,rep,name=items,proto3" json:"items,omitempty"`
	Meta  *DataMeta              `protobuf:"bytes,3,opt,name=meta,proto3" json:"meta,omitempty"`
	// AI result information
	AiInfo        *AIProcessingInfo `protobuf:"bytes,10,opt,name=ai_info,json=aiInfo,proto3" json:"ai_info,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DataQueryResult) Reset() {
	*x = DataQueryResult{}
	mi := &file_pkg_server_server_proto_msgTypes[57]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DataQueryResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DataQueryResult) ProtoMessage() {}

func (x *DataQueryResult) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_server_server_proto_msgTypes[57]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DataQueryResult.ProtoReflect.Descriptor instead.
func (*DataQueryResult) Descriptor() ([]byte, []int) {
	return file_pkg_server_server_proto_rawDescGZIP(), []int{57}
}

func (x *DataQueryResult) GetData() []*Pair {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *DataQueryResult) GetItems() []*Pairs {
	if x != nil {
		return x.Items
	}
	return nil
}

func (x *DataQueryResult) GetMeta() *DataMeta {
	if x != nil {
		return x.Meta
	}
	return nil
}

func (x *DataQueryResult) GetAiInfo() *AIProcessingInfo {
	if x != nil {
		return x.AiInfo
	}
	return nil
}

type DataMeta struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	Databases       []string               `protobuf:"bytes,1,rep,name=databases,proto3" json:"databases,omitempty"`
	Tables          []string               `protobuf:"bytes,2,rep,name=tables,proto3" json:"tables,omitempty"`
	CurrentDatabase string                 `protobuf:"bytes,3,opt,name=currentDatabase,proto3" json:"currentDatabase,omitempty"`
	Duration        string                 `protobuf:"bytes,4,opt,name=duration,proto3" json:"duration,omitempty"`
	Labels          []*Pair                `protobuf:"bytes,5,rep,name=labels,proto3" json:"labels,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *DataMeta) Reset() {
	*x = DataMeta{}
	mi := &file_pkg_server_server_proto_msgTypes[58]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DataMeta) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DataMeta) ProtoMessage() {}

func (x *DataMeta) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_server_server_proto_msgTypes[58]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DataMeta.ProtoReflect.Descriptor instead.
func (*DataMeta) Descriptor() ([]byte, []int) {
	return file_pkg_server_server_proto_rawDescGZIP(), []int{58}
}

func (x *DataMeta) GetDatabases() []string {
	if x != nil {
		return x.Databases
	}
	return nil
}

func (x *DataMeta) GetTables() []string {
	if x != nil {
		return x.Tables
	}
	return nil
}

func (x *DataMeta) GetCurrentDatabase() string {
	if x != nil {
		return x.CurrentDatabase
	}
	return ""
}

func (x *DataMeta) GetDuration() string {
	if x != nil {
		return x.Duration
	}
	return ""
}

func (x *DataMeta) GetLabels() []*Pair {
	if x != nil {
		return x.Labels
	}
	return nil
}

// AI-specific message definitions
type GenerateSQLRequest struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	NaturalLanguage string                 `protobuf:"bytes,1,opt,name=natural_language,json=naturalLanguage,proto3" json:"natural_language,omitempty"`
	DatabaseTarget  *DatabaseTarget        `protobuf:"bytes,2,opt,name=database_target,json=databaseTarget,proto3" json:"database_target,omitempty"`
	Options         *GenerationOptions     `protobuf:"bytes,3,opt,name=options,proto3" json:"options,omitempty"`
	Context         map[string]string      `protobuf:"bytes,4,rep,name=context,proto3" json:"context,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *GenerateSQLRequest) Reset() {
	*x = GenerateSQLRequest{}
	mi := &file_pkg_server_server_proto_msgTypes[59]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GenerateSQLRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GenerateSQLRequest) ProtoMessage() {}

func (x *GenerateSQLRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_server_server_proto_msgTypes[59]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GenerateSQLRequest.ProtoReflect.Descriptor instead.
func (*GenerateSQLRequest) Descriptor() ([]byte, []int) {
	return file_pkg_server_server_proto_rawDescGZIP(), []int{59}
}

func (x *GenerateSQLRequest) GetNaturalLanguage() string {
	if x != nil {
		return x.NaturalLanguage
	}
	return ""
}

func (x *GenerateSQLRequest) GetDatabaseTarget() *DatabaseTarget {
	if x != nil {
		return x.DatabaseTarget
	}
	return nil
}

func (x *GenerateSQLRequest) GetOptions() *GenerationOptions {
	if x != nil {
		return x.Options
	}
	return nil
}

func (x *GenerateSQLRequest) GetContext() map[string]string {
	if x != nil {
		return x.Context
	}
	return nil
}

type GenerateSQLResponse struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	GeneratedSql    string                 `protobuf:"bytes,1,opt,name=generated_sql,json=generatedSql,proto3" json:"generated_sql,omitempty"`
	ConfidenceScore float32                `protobuf:"fixed32,2,opt,name=confidence_score,json=confidenceScore,proto3" json:"confidence_score,omitempty"`
	Explanation     string                 `protobuf:"bytes,3,opt,name=explanation,proto3" json:"explanation,omitempty"`
	Suggestions     []string               `protobuf:"bytes,4,rep,name=suggestions,proto3" json:"suggestions,omitempty"`
	Error           *AIError               `protobuf:"bytes,5,opt,name=error,proto3" json:"error,omitempty"`
	Metadata        *GenerationMetadata    `protobuf:"bytes,6,opt,name=metadata,proto3" json:"metadata,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *GenerateSQLResponse) Reset() {
	*x = GenerateSQLResponse{}
	mi := &file_pkg_server_server_proto_msgTypes[60]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GenerateSQLResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GenerateSQLResponse) ProtoMessage() {}

func (x *GenerateSQLResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_server_server_proto_msgTypes[60]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GenerateSQLResponse.ProtoReflect.Descriptor instead.
func (*GenerateSQLResponse) Descriptor() ([]byte, []int) {
	return file_pkg_server_server_proto_rawDescGZIP(), []int{60}
}

func (x *GenerateSQLResponse) GetGeneratedSql() string {
	if x != nil {
		return x.GeneratedSql
	}
	return ""
}

func (x *GenerateSQLResponse) GetConfidenceScore() float32 {
	if x != nil {
		return x.ConfidenceScore
	}
	return 0
}

func (x *GenerateSQLResponse) GetExplanation() string {
	if x != nil {
		return x.Explanation
	}
	return ""
}

func (x *GenerateSQLResponse) GetSuggestions() []string {
	if x != nil {
		return x.Suggestions
	}
	return nil
}

func (x *GenerateSQLResponse) GetError() *AIError {
	if x != nil {
		return x.Error
	}
	return nil
}

func (x *GenerateSQLResponse) GetMetadata() *GenerationMetadata {
	if x != nil {
		return x.Metadata
	}
	return nil
}

type ValidateSQLRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Sql           string                 `protobuf:"bytes,1,opt,name=sql,proto3" json:"sql,omitempty"`
	DatabaseType  string                 `protobuf:"bytes,2,opt,name=database_type,json=databaseType,proto3" json:"database_type,omitempty"`
	Context       map[string]string      `protobuf:"bytes,3,rep,name=context,proto3" json:"context,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ValidateSQLRequest) Reset() {
	*x = ValidateSQLRequest{}
	mi := &file_pkg_server_server_proto_msgTypes[61]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ValidateSQLRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ValidateSQLRequest) ProtoMessage() {}

func (x *ValidateSQLRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_server_server_proto_msgTypes[61]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ValidateSQLRequest.ProtoReflect.Descriptor instead.
func (*ValidateSQLRequest) Descriptor() ([]byte, []int) {
	return file_pkg_server_server_proto_rawDescGZIP(), []int{61}
}

func (x *ValidateSQLRequest) GetSql() string {
	if x != nil {
		return x.Sql
	}
	return ""
}

func (x *ValidateSQLRequest) GetDatabaseType() string {
	if x != nil {
		return x.DatabaseType
	}
	return ""
}

func (x *ValidateSQLRequest) GetContext() map[string]string {
	if x != nil {
		return x.Context
	}
	return nil
}

type ValidateSQLResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	IsValid       bool                   `protobuf:"varint,1,opt,name=is_valid,json=isValid,proto3" json:"is_valid,omitempty"`
	Errors        []*ValidationError     `protobuf:"bytes,2,rep,name=errors,proto3" json:"errors,omitempty"`
	Warnings      []string               `protobuf:"bytes,3,rep,name=warnings,proto3" json:"warnings,omitempty"`
	FormattedSql  string                 `protobuf:"bytes,4,opt,name=formatted_sql,json=formattedSql,proto3" json:"formatted_sql,omitempty"`
	Metadata      *ValidationMetadata    `protobuf:"bytes,5,opt,name=metadata,proto3" json:"metadata,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ValidateSQLResponse) Reset() {
	*x = ValidateSQLResponse{}
	mi := &file_pkg_server_server_proto_msgTypes[62]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ValidateSQLResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ValidateSQLResponse) ProtoMessage() {}

func (x *ValidateSQLResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_server_server_proto_msgTypes[62]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ValidateSQLResponse.ProtoReflect.Descriptor instead.
func (*ValidateSQLResponse) Descriptor() ([]byte, []int) {
	return file_pkg_server_server_proto_rawDescGZIP(), []int{62}
}

func (x *ValidateSQLResponse) GetIsValid() bool {
	if x != nil {
		return x.IsValid
	}
	return false
}

func (x *ValidateSQLResponse) GetErrors() []*ValidationError {
	if x != nil {
		return x.Errors
	}
	return nil
}

func (x *ValidateSQLResponse) GetWarnings() []string {
	if x != nil {
		return x.Warnings
	}
	return nil
}

func (x *ValidateSQLResponse) GetFormattedSql() string {
	if x != nil {
		return x.FormattedSql
	}
	return ""
}

func (x *ValidateSQLResponse) GetMetadata() *ValidationMetadata {
	if x != nil {
		return x.Metadata
	}
	return nil
}

type AICapabilitiesResponse struct {
	state              protoimpl.MessageState `protogen:"open.v1"`
	SupportedDatabases []string               `protobuf:"bytes,1,rep,name=supported_databases,json=supportedDatabases,proto3" json:"supported_databases,omitempty"`
	Features           []*AIFeature           `protobuf:"bytes,2,rep,name=features,proto3" json:"features,omitempty"`
	Version            string                 `protobuf:"bytes,3,opt,name=version,proto3" json:"version,omitempty"`
	Status             HealthStatus           `protobuf:"varint,4,opt,name=status,proto3,enum=server.HealthStatus" json:"status,omitempty"`
	Limits             map[string]string      `protobuf:"bytes,5,rep,name=limits,proto3" json:"limits,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields      protoimpl.UnknownFields
	sizeCache          protoimpl.SizeCache
}

func (x *AICapabilitiesResponse) Reset() {
	*x = AICapabilitiesResponse{}
	mi := &file_pkg_server_server_proto_msgTypes[63]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AICapabilitiesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AICapabilitiesResponse) ProtoMessage() {}

func (x *AICapabilitiesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_server_server_proto_msgTypes[63]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AICapabilitiesResponse.ProtoReflect.Descriptor instead.
func (*AICapabilitiesResponse) Descriptor() ([]byte, []int) {
	return file_pkg_server_server_proto_rawDescGZIP(), []int{63}
}

func (x *AICapabilitiesResponse) GetSupportedDatabases() []string {
	if x != nil {
		return x.SupportedDatabases
	}
	return nil
}

func (x *AICapabilitiesResponse) GetFeatures() []*AIFeature {
	if x != nil {
		return x.Features
	}
	return nil
}

func (x *AICapabilitiesResponse) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

func (x *AICapabilitiesResponse) GetStatus() HealthStatus {
	if x != nil {
		return x.Status
	}
	return HealthStatus_HEALTH_STATUS_UNSPECIFIED
}

func (x *AICapabilitiesResponse) GetLimits() map[string]string {
	if x != nil {
		return x.Limits
	}
	return nil
}

type DatabaseTarget struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Type          string                 `protobuf:"bytes,1,opt,name=type,proto3" json:"type,omitempty"` // mysql, postgresql, sqlite, etc.
	Version       string                 `protobuf:"bytes,2,opt,name=version,proto3" json:"version,omitempty"`
	Schemas       []string               `protobuf:"bytes,3,rep,name=schemas,proto3" json:"schemas,omitempty"`
	Metadata      map[string]string      `protobuf:"bytes,4,rep,name=metadata,proto3" json:"metadata,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DatabaseTarget) Reset() {
	*x = DatabaseTarget{}
	mi := &file_pkg_server_server_proto_msgTypes[64]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DatabaseTarget) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DatabaseTarget) ProtoMessage() {}

func (x *DatabaseTarget) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_server_server_proto_msgTypes[64]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DatabaseTarget.ProtoReflect.Descriptor instead.
func (*DatabaseTarget) Descriptor() ([]byte, []int) {
	return file_pkg_server_server_proto_rawDescGZIP(), []int{64}
}

func (x *DatabaseTarget) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *DatabaseTarget) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

func (x *DatabaseTarget) GetSchemas() []string {
	if x != nil {
		return x.Schemas
	}
	return nil
}

func (x *DatabaseTarget) GetMetadata() map[string]string {
	if x != nil {
		return x.Metadata
	}
	return nil
}

type GenerationOptions struct {
	state               protoimpl.MessageState `protogen:"open.v1"`
	IncludeExplanation  bool                   `protobuf:"varint,1,opt,name=include_explanation,json=includeExplanation,proto3" json:"include_explanation,omitempty"`
	FormatOutput        bool                   `protobuf:"varint,2,opt,name=format_output,json=formatOutput,proto3" json:"format_output,omitempty"`
	MaxSuggestions      int32                  `protobuf:"varint,3,opt,name=max_suggestions,json=maxSuggestions,proto3" json:"max_suggestions,omitempty"`
	ConfidenceThreshold float32                `protobuf:"fixed32,4,opt,name=confidence_threshold,json=confidenceThreshold,proto3" json:"confidence_threshold,omitempty"`
	EnableOptimization  bool                   `protobuf:"varint,5,opt,name=enable_optimization,json=enableOptimization,proto3" json:"enable_optimization,omitempty"`
	unknownFields       protoimpl.UnknownFields
	sizeCache           protoimpl.SizeCache
}

func (x *GenerationOptions) Reset() {
	*x = GenerationOptions{}
	mi := &file_pkg_server_server_proto_msgTypes[65]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GenerationOptions) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GenerationOptions) ProtoMessage() {}

func (x *GenerationOptions) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_server_server_proto_msgTypes[65]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GenerationOptions.ProtoReflect.Descriptor instead.
func (*GenerationOptions) Descriptor() ([]byte, []int) {
	return file_pkg_server_server_proto_rawDescGZIP(), []int{65}
}

func (x *GenerationOptions) GetIncludeExplanation() bool {
	if x != nil {
		return x.IncludeExplanation
	}
	return false
}

func (x *GenerationOptions) GetFormatOutput() bool {
	if x != nil {
		return x.FormatOutput
	}
	return false
}

func (x *GenerationOptions) GetMaxSuggestions() int32 {
	if x != nil {
		return x.MaxSuggestions
	}
	return 0
}

func (x *GenerationOptions) GetConfidenceThreshold() float32 {
	if x != nil {
		return x.ConfidenceThreshold
	}
	return 0
}

func (x *GenerationOptions) GetEnableOptimization() bool {
	if x != nil {
		return x.EnableOptimization
	}
	return false
}

type AIProcessingInfo struct {
	state            protoimpl.MessageState `protogen:"open.v1"`
	RequestId        string                 `protobuf:"bytes,1,opt,name=request_id,json=requestId,proto3" json:"request_id,omitempty"`
	ProcessingTimeMs float32                `protobuf:"fixed32,2,opt,name=processing_time_ms,json=processingTimeMs,proto3" json:"processing_time_ms,omitempty"`
	ModelUsed        string                 `protobuf:"bytes,3,opt,name=model_used,json=modelUsed,proto3" json:"model_used,omitempty"`
	ConfidenceScore  float32                `protobuf:"fixed32,4,opt,name=confidence_score,json=confidenceScore,proto3" json:"confidence_score,omitempty"`
	DebugInfo        []string               `protobuf:"bytes,5,rep,name=debug_info,json=debugInfo,proto3" json:"debug_info,omitempty"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *AIProcessingInfo) Reset() {
	*x = AIProcessingInfo{}
	mi := &file_pkg_server_server_proto_msgTypes[66]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AIProcessingInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AIProcessingInfo) ProtoMessage() {}

func (x *AIProcessingInfo) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_server_server_proto_msgTypes[66]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AIProcessingInfo.ProtoReflect.Descriptor instead.
func (*AIProcessingInfo) Descriptor() ([]byte, []int) {
	return file_pkg_server_server_proto_rawDescGZIP(), []int{66}
}

func (x *AIProcessingInfo) GetRequestId() string {
	if x != nil {
		return x.RequestId
	}
	return ""
}

func (x *AIProcessingInfo) GetProcessingTimeMs() float32 {
	if x != nil {
		return x.ProcessingTimeMs
	}
	return 0
}

func (x *AIProcessingInfo) GetModelUsed() string {
	if x != nil {
		return x.ModelUsed
	}
	return ""
}

func (x *AIProcessingInfo) GetConfidenceScore() float32 {
	if x != nil {
		return x.ConfidenceScore
	}
	return 0
}

func (x *AIProcessingInfo) GetDebugInfo() []string {
	if x != nil {
		return x.DebugInfo
	}
	return nil
}

type GenerationMetadata struct {
	state            protoimpl.MessageState `protogen:"open.v1"`
	RequestId        string                 `protobuf:"bytes,1,opt,name=request_id,json=requestId,proto3" json:"request_id,omitempty"`
	ProcessingTimeMs float32                `protobuf:"fixed32,2,opt,name=processing_time_ms,json=processingTimeMs,proto3" json:"processing_time_ms,omitempty"`
	ModelUsed        string                 `protobuf:"bytes,3,opt,name=model_used,json=modelUsed,proto3" json:"model_used,omitempty"`
	TokenCount       int32                  `protobuf:"varint,4,opt,name=token_count,json=tokenCount,proto3" json:"token_count,omitempty"`
	Timestamp        *timestamppb.Timestamp `protobuf:"bytes,5,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *GenerationMetadata) Reset() {
	*x = GenerationMetadata{}
	mi := &file_pkg_server_server_proto_msgTypes[67]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GenerationMetadata) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GenerationMetadata) ProtoMessage() {}

func (x *GenerationMetadata) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_server_server_proto_msgTypes[67]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GenerationMetadata.ProtoReflect.Descriptor instead.
func (*GenerationMetadata) Descriptor() ([]byte, []int) {
	return file_pkg_server_server_proto_rawDescGZIP(), []int{67}
}

func (x *GenerationMetadata) GetRequestId() string {
	if x != nil {
		return x.RequestId
	}
	return ""
}

func (x *GenerationMetadata) GetProcessingTimeMs() float32 {
	if x != nil {
		return x.ProcessingTimeMs
	}
	return 0
}

func (x *GenerationMetadata) GetModelUsed() string {
	if x != nil {
		return x.ModelUsed
	}
	return ""
}

func (x *GenerationMetadata) GetTokenCount() int32 {
	if x != nil {
		return x.TokenCount
	}
	return 0
}

func (x *GenerationMetadata) GetTimestamp() *timestamppb.Timestamp {
	if x != nil {
		return x.Timestamp
	}
	return nil
}

type ValidationError struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Message       string                 `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
	Line          int32                  `protobuf:"varint,2,opt,name=line,proto3" json:"line,omitempty"`
	Column        int32                  `protobuf:"varint,3,opt,name=column,proto3" json:"column,omitempty"`
	Type          ValidationErrorType    `protobuf:"varint,4,opt,name=type,proto3,enum=server.ValidationErrorType" json:"type,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ValidationError) Reset() {
	*x = ValidationError{}
	mi := &file_pkg_server_server_proto_msgTypes[68]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ValidationError) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ValidationError) ProtoMessage() {}

func (x *ValidationError) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_server_server_proto_msgTypes[68]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ValidationError.ProtoReflect.Descriptor instead.
func (*ValidationError) Descriptor() ([]byte, []int) {
	return file_pkg_server_server_proto_rawDescGZIP(), []int{68}
}

func (x *ValidationError) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *ValidationError) GetLine() int32 {
	if x != nil {
		return x.Line
	}
	return 0
}

func (x *ValidationError) GetColumn() int32 {
	if x != nil {
		return x.Column
	}
	return 0
}

func (x *ValidationError) GetType() ValidationErrorType {
	if x != nil {
		return x.Type
	}
	return ValidationErrorType_VALIDATION_ERROR_TYPE_UNSPECIFIED
}

type ValidationMetadata struct {
	state            protoimpl.MessageState `protogen:"open.v1"`
	ValidatorVersion string                 `protobuf:"bytes,1,opt,name=validator_version,json=validatorVersion,proto3" json:"validator_version,omitempty"`
	ValidationTimeMs float32                `protobuf:"fixed32,2,opt,name=validation_time_ms,json=validationTimeMs,proto3" json:"validation_time_ms,omitempty"`
	Timestamp        *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *ValidationMetadata) Reset() {
	*x = ValidationMetadata{}
	mi := &file_pkg_server_server_proto_msgTypes[69]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ValidationMetadata) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ValidationMetadata) ProtoMessage() {}

func (x *ValidationMetadata) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_server_server_proto_msgTypes[69]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ValidationMetadata.ProtoReflect.Descriptor instead.
func (*ValidationMetadata) Descriptor() ([]byte, []int) {
	return file_pkg_server_server_proto_rawDescGZIP(), []int{69}
}

func (x *ValidationMetadata) GetValidatorVersion() string {
	if x != nil {
		return x.ValidatorVersion
	}
	return ""
}

func (x *ValidationMetadata) GetValidationTimeMs() float32 {
	if x != nil {
		return x.ValidationTimeMs
	}
	return 0
}

func (x *ValidationMetadata) GetTimestamp() *timestamppb.Timestamp {
	if x != nil {
		return x.Timestamp
	}
	return nil
}

type AIFeature struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Name          string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Enabled       bool                   `protobuf:"varint,2,opt,name=enabled,proto3" json:"enabled,omitempty"`
	Description   string                 `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	Parameters    map[string]string      `protobuf:"bytes,4,rep,name=parameters,proto3" json:"parameters,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AIFeature) Reset() {
	*x = AIFeature{}
	mi := &file_pkg_server_server_proto_msgTypes[70]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AIFeature) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AIFeature) ProtoMessage() {}

func (x *AIFeature) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_server_server_proto_msgTypes[70]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AIFeature.ProtoReflect.Descriptor instead.
func (*AIFeature) Descriptor() ([]byte, []int) {
	return file_pkg_server_server_proto_rawDescGZIP(), []int{70}
}

func (x *AIFeature) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *AIFeature) GetEnabled() bool {
	if x != nil {
		return x.Enabled
	}
	return false
}

func (x *AIFeature) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *AIFeature) GetParameters() map[string]string {
	if x != nil {
		return x.Parameters
	}
	return nil
}

type AIError struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Code          AIErrorCode            `protobuf:"varint,1,opt,name=code,proto3,enum=server.AIErrorCode" json:"code,omitempty"`
	Message       string                 `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Details       string                 `protobuf:"bytes,3,opt,name=details,proto3" json:"details,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AIError) Reset() {
	*x = AIError{}
	mi := &file_pkg_server_server_proto_msgTypes[71]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AIError) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AIError) ProtoMessage() {}

func (x *AIError) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_server_server_proto_msgTypes[71]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AIError.ProtoReflect.Descriptor instead.
func (*AIError) Descriptor() ([]byte, []int) {
	return file_pkg_server_server_proto_rawDescGZIP(), []int{71}
}

func (x *AIError) GetCode() AIErrorCode {
	if x != nil {
		return x.Code
	}
	return AIErrorCode_AI_ERROR_CODE_UNSPECIFIED
}

func (x *AIError) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *AIError) GetDetails() string {
	if x != nil {
		return x.Details
	}
	return ""
}

var File_pkg_server_server_proto protoreflect.FileDescriptor

const file_pkg_server_server_proto_rawDesc = "" +
	"\n" +
	"\x17pkg/server/server.proto\x12\x06server\x1a\x1fgoogle/protobuf/timestamp.proto\x1a\x1cgoogle/api/annotations.proto\"^\n" +
	"\x04Menu\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12\x14\n" +
	"\x05index\x18\x02 \x01(\tR\x05index\x12\x12\n" +
	"\x04icon\x18\x03 \x01(\tR\x04icon\x12\x18\n" +
	"\aversion\x18\x04 \x01(\x05R\aversion\",\n" +
	"\bMenuList\x12 \n" +
	"\x04data\x18\x01 \x03(\v2\f.server.MenuR\x04data\"~\n" +
	"\x06Suites\x12,\n" +
	"\x04data\x18\x01 \x03(\v2\x18.server.Suites.DataEntryR\x04data\x1aF\n" +
	"\tDataEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12#\n" +
	"\x05value\x18\x02 \x01(\v2\r.server.ItemsR\x05value:\x028\x01\"/\n" +
	"\x05Items\x12\x12\n" +
	"\x04data\x18\x01 \x03(\tR\x04data\x12\x12\n" +
	"\x04kind\x18\x02 \x01(\tR\x04kind\"\x93\x01\n" +
	"\rHistorySuites\x123\n" +
	"\x04data\x18\x01 \x03(\v2\x1f.server.HistorySuites.DataEntryR\x04data\x1aM\n" +
	"\tDataEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12*\n" +
	"\x05value\x18\x02 \x01(\v2\x14.server.HistoryItemsR\x05value:\x028\x01\"?\n" +
	"\fHistoryItems\x12/\n" +
	"\x04data\x18\x01 \x03(\v2\x1b.server.HistoryCaseIdentityR\x04data\"\x97\x01\n" +
	"\x13HistoryCaseIdentity\x12\x14\n" +
	"\x05suite\x18\x01 \x01(\tR\x05suite\x12\x1a\n" +
	"\btestcase\x18\x02 \x01(\tR\btestcase\x12*\n" +
	"\x10historySuiteName\x18\x03 \x01(\tR\x10historySuiteName\x12\x12\n" +
	"\x04kind\x18\x04 \x01(\tR\x04kind\x12\x0e\n" +
	"\x02ID\x18\x05 \x01(\tR\x02ID\"r\n" +
	"\x10TestCaseIdentity\x12\x14\n" +
	"\x05suite\x18\x01 \x01(\tR\x05suite\x12\x1a\n" +
	"\btestcase\x18\x02 \x01(\tR\btestcase\x12,\n" +
	"\n" +
	"parameters\x18\x03 \x03(\v2\f.server.PairR\n" +
	"parameters\"K\n" +
	"\x0fTestSuiteSource\x12\x12\n" +
	"\x04kind\x18\x01 \x01(\tR\x04kind\x12\x10\n" +
	"\x03url\x18\x02 \x01(\tR\x03url\x12\x12\n" +
	"\x04data\x18\x03 \x01(\tR\x04data\"\xa5\x01\n" +
	"\tTestSuite\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12\x10\n" +
	"\x03api\x18\x02 \x01(\tR\x03api\x12\"\n" +
	"\x05param\x18\x03 \x03(\v2\f.server.PairR\x05param\x12#\n" +
	"\x04spec\x18\x04 \x01(\v2\x0f.server.APISpecR\x04spec\x12)\n" +
	"\x05proxy\x18\x05 \x01(\v2\x13.server.ProxyConfigR\x05proxy\"b\n" +
	"\x11TestSuiteWithCase\x12'\n" +
	"\x05suite\x18\x01 \x01(\v2\x11.server.TestSuiteR\x05suite\x12$\n" +
	"\x04case\x18\x02 \x01(\v2\x10.server.TestCaseR\x04case\"v\n" +
	"\aAPISpec\x12\x12\n" +
	"\x04kind\x18\x01 \x01(\tR\x04kind\x12\x10\n" +
	"\x03url\x18\x02 \x01(\tR\x03url\x12\x1d\n" +
	"\x03rpc\x18\x03 \x01(\v2\v.server.RPCR\x03rpc\x12&\n" +
	"\x06secure\x18\x04 \x01(\v2\x0e.server.SecureR\x06secure\"z\n" +
	"\x06Secure\x12\x1a\n" +
	"\binsecure\x18\x01 \x01(\bR\binsecure\x12\x12\n" +
	"\x04cert\x18\x02 \x01(\tR\x04cert\x12\x0e\n" +
	"\x02ca\x18\x03 \x01(\tR\x02ca\x12\x1e\n" +
	"\n" +
	"serverName\x18\x04 \x01(\tR\n" +
	"serverName\x12\x10\n" +
	"\x03key\x18\x05 \x01(\tR\x03key\"\x95\x01\n" +
	"\x03RPC\x12\x16\n" +
	"\x06import\x18\x01 \x03(\tR\x06import\x12*\n" +
	"\x10serverReflection\x18\x02 \x01(\bR\x10serverReflection\x12\x1c\n" +
	"\tprotofile\x18\x03 \x01(\tR\tprotofile\x12\x1a\n" +
	"\bprotoset\x18\x04 \x01(\tR\bprotoset\x12\x10\n" +
	"\x03raw\x18\x05 \x01(\tR\x03raw\"M\n" +
	"\x11TestSuiteIdentity\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12\x10\n" +
	"\x03api\x18\x02 \x01(\tR\x03api\x12\x12\n" +
	"\x04kind\x18\x03 \x01(\tR\x04kind\"h\n" +
	"\x12TestSuiteDuplicate\x12(\n" +
	"\x0fsourceSuiteName\x18\x01 \x01(\tR\x0fsourceSuiteName\x12(\n" +
	"\x0ftargetSuiteName\x18\x02 \x01(\tR\x0ftargetSuiteName\"\xb7\x01\n" +
	"\x11TestCaseDuplicate\x12(\n" +
	"\x0fsourceSuiteName\x18\x01 \x01(\tR\x0fsourceSuiteName\x12&\n" +
	"\x0esourceCaseName\x18\x02 \x01(\tR\x0esourceCaseName\x12(\n" +
	"\x0ftargetSuiteName\x18\x03 \x01(\tR\x0ftargetSuiteName\x12&\n" +
	"\x0etargetCaseName\x18\x04 \x01(\tR\x0etargetCaseName\"\xf7\x01\n" +
	"\bTestTask\x12\x12\n" +
	"\x04data\x18\x01 \x01(\tR\x04data\x12\x12\n" +
	"\x04kind\x18\x02 \x01(\tR\x04kind\x12\x1a\n" +
	"\bcaseName\x18\x03 \x01(\tR\bcaseName\x12\x14\n" +
	"\x05level\x18\x04 \x01(\tR\x05level\x12+\n" +
	"\x03env\x18\x05 \x03(\v2\x19.server.TestTask.EnvEntryR\x03env\x12,\n" +
	"\n" +
	"parameters\x18\x06 \x03(\v2\f.server.PairR\n" +
	"parameters\x1a6\n" +
	"\bEnvEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\xa9\x01\n" +
	"\rBatchTestTask\x12\x1c\n" +
	"\tsuiteName\x18\x01 \x01(\tR\tsuiteName\x12\x1a\n" +
	"\bcaseName\x18\x02 \x01(\tR\bcaseName\x12,\n" +
	"\n" +
	"parameters\x18\x03 \x03(\v2\f.server.PairR\n" +
	"parameters\x12\x14\n" +
	"\x05count\x18\x04 \x01(\x05R\x05count\x12\x1a\n" +
	"\binterval\x18\x05 \x01(\tR\binterval\"|\n" +
	"\n" +
	"TestResult\x12\x18\n" +
	"\amessage\x18\x01 \x01(\tR\amessage\x12\x14\n" +
	"\x05error\x18\x02 \x01(\tR\x05error\x12>\n" +
	"\x0etestCaseResult\x18\x03 \x03(\v2\x16.server.TestCaseResultR\x0etestCaseResult\"\xec\x01\n" +
	"\x11HistoryTestResult\x12\x18\n" +
	"\amessage\x18\x01 \x01(\tR\amessage\x12\x14\n" +
	"\x05error\x18\x02 \x01(\tR\x05error\x12>\n" +
	"\x0etestCaseResult\x18\x03 \x03(\v2\x16.server.TestCaseResultR\x0etestCaseResult\x12+\n" +
	"\x04data\x18\x04 \x01(\v2\x17.server.HistoryTestCaseR\x04data\x12:\n" +
	"\n" +
	"createTime\x18\x05 \x01(\v2\x1a.google.protobuf.TimestampR\n" +
	"createTime\"<\n" +
	"\n" +
	"HelloReply\x12\x18\n" +
	"\amessage\x18\x01 \x01(\tR\amessage\x12\x14\n" +
	"\x05error\x18\x02 \x01(\tR\x05error\"\x1e\n" +
	"\bYamlData\x12\x12\n" +
	"\x04data\x18\x01 \x01(\fR\x04data\"U\n" +
	"\x05Suite\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12\x10\n" +
	"\x03api\x18\x02 \x01(\tR\x03api\x12&\n" +
	"\x05items\x18\x03 \x03(\v2\x10.server.TestCaseR\x05items\"W\n" +
	"\x11TestCaseWithSuite\x12\x1c\n" +
	"\tsuiteName\x18\x01 \x01(\tR\tsuiteName\x12$\n" +
	"\x04data\x18\x02 \x01(\v2\x10.server.TestCaseR\x04data\"1\n" +
	"\tTestCases\x12$\n" +
	"\x04data\x18\x01 \x03(\v2\x10.server.TestCaseR\x04data\"\xad\x01\n" +
	"\bTestCase\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12\x1c\n" +
	"\tsuiteName\x18\x02 \x01(\tR\tsuiteName\x12)\n" +
	"\arequest\x18\x03 \x01(\v2\x0f.server.RequestR\arequest\x12,\n" +
	"\bresponse\x18\x04 \x01(\v2\x10.server.ResponseR\bresponse\x12\x16\n" +
	"\x06server\x18\x05 \x01(\tR\x06server\"\xc9\x03\n" +
	"\x0fHistoryTestCase\x12\x1a\n" +
	"\bcaseName\x18\x01 \x01(\tR\bcaseName\x12\x1c\n" +
	"\tsuiteName\x18\x02 \x01(\tR\tsuiteName\x12*\n" +
	"\x10historySuiteName\x18\x03 \x01(\tR\x10historySuiteName\x12:\n" +
	"\n" +
	"createTime\x18\x04 \x01(\v2\x1a.google.protobuf.TimestampR\n" +
	"createTime\x12,\n" +
	"\n" +
	"suiteParam\x18\x05 \x03(\v2\f.server.PairR\n" +
	"suiteParam\x12-\n" +
	"\tsuiteSpec\x18\x06 \x01(\v2\x0f.server.APISpecR\tsuiteSpec\x12\x1a\n" +
	"\bsuiteApi\x18\a \x01(\tR\bsuiteApi\x12)\n" +
	"\arequest\x18\b \x01(\v2\x0f.server.RequestR\arequest\x12,\n" +
	"\bresponse\x18\t \x01(\v2\x10.server.ResponseR\bresponse\x12\x0e\n" +
	"\x02ID\x18\n" +
	" \x01(\tR\x02ID\x122\n" +
	"\rhistoryHeader\x18\v \x03(\v2\f.server.PairR\rhistoryHeader\"?\n" +
	"\x10HistoryTestCases\x12+\n" +
	"\x04data\x18\x01 \x03(\v2\x17.server.HistoryTestCaseR\x04data\"\xd9\x01\n" +
	"\aRequest\x12\x10\n" +
	"\x03api\x18\x01 \x01(\tR\x03api\x12\x16\n" +
	"\x06method\x18\x02 \x01(\tR\x06method\x12$\n" +
	"\x06header\x18\x03 \x03(\v2\f.server.PairR\x06header\x12\"\n" +
	"\x05query\x18\x04 \x03(\v2\f.server.PairR\x05query\x12$\n" +
	"\x06cookie\x18\x05 \x03(\v2\f.server.PairR\x06cookie\x12 \n" +
	"\x04form\x18\x06 \x03(\v2\f.server.PairR\x04form\x12\x12\n" +
	"\x04body\x18\a \x01(\tR\x04body\"\x97\x02\n" +
	"\bResponse\x12\x1e\n" +
	"\n" +
	"statusCode\x18\x01 \x01(\x05R\n" +
	"statusCode\x12\x12\n" +
	"\x04body\x18\x02 \x01(\tR\x04body\x12$\n" +
	"\x06header\x18\x03 \x03(\v2\f.server.PairR\x06header\x128\n" +
	"\x10bodyFieldsExpect\x18\x04 \x03(\v2\f.server.PairR\x10bodyFieldsExpect\x12\x16\n" +
	"\x06verify\x18\x05 \x03(\tR\x06verify\x12G\n" +
	"\x11ConditionalVerify\x18\x06 \x03(\v2\x19.server.ConditionalVerifyR\x11ConditionalVerify\x12\x16\n" +
	"\x06schema\x18\a \x01(\tR\x06schema\"I\n" +
	"\x11ConditionalVerify\x12\x1c\n" +
	"\tcondition\x18\x01 \x03(\tR\tcondition\x12\x16\n" +
	"\x06verify\x18\x02 \x03(\tR\x06verify\"\xa8\x01\n" +
	"\x0eTestCaseResult\x12\x1e\n" +
	"\n" +
	"statusCode\x18\x01 \x01(\x05R\n" +
	"statusCode\x12\x12\n" +
	"\x04body\x18\x02 \x01(\tR\x04body\x12$\n" +
	"\x06header\x18\x03 \x03(\v2\f.server.PairR\x06header\x12\x14\n" +
	"\x05error\x18\x04 \x01(\tR\x05error\x12\x0e\n" +
	"\x02id\x18\x05 \x01(\tR\x02id\x12\x16\n" +
	"\x06output\x18\x06 \x01(\tR\x06output\"P\n" +
	"\x04Pair\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value\x12 \n" +
	"\vdescription\x18\x03 \x01(\tR\vdescription\")\n" +
	"\x05Pairs\x12 \n" +
	"\x04data\x18\x01 \x03(\v2\f.server.PairR\x04data\"5\n" +
	"\vSimpleQuery\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12\x12\n" +
	"\x04kind\x18\x02 \x01(\tR\x04kind\"+\n" +
	"\x06Stores\x12!\n" +
	"\x04data\x18\x01 \x03(\v2\r.server.StoreR\x04data\"\xc0\x02\n" +
	"\x05Store\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12\x14\n" +
	"\x05owner\x18\x02 \x01(\tR\x05owner\x12 \n" +
	"\vdescription\x18\x03 \x01(\tR\vdescription\x12\x10\n" +
	"\x03url\x18\x04 \x01(\tR\x03url\x12\x1a\n" +
	"\busername\x18\x05 \x01(\tR\busername\x12\x1a\n" +
	"\bpassword\x18\x06 \x01(\tR\bpassword\x12,\n" +
	"\n" +
	"properties\x18\a \x03(\v2\f.server.PairR\n" +
	"properties\x12%\n" +
	"\x04kind\x18\b \x01(\v2\x11.server.StoreKindR\x04kind\x12\x14\n" +
	"\x05ready\x18\t \x01(\bR\x05ready\x12\x1a\n" +
	"\breadOnly\x18\n" +
	" \x01(\bR\breadOnly\x12\x1a\n" +
	"\bdisabled\x18\v \x01(\bR\bdisabled\"3\n" +
	"\n" +
	"StoreKinds\x12%\n" +
	"\x04data\x18\x01 \x03(\v2\x11.server.StoreKindR\x04data\"\xf0\x01\n" +
	"\tStoreKind\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12\x10\n" +
	"\x03url\x18\x02 \x01(\tR\x03url\x12\x18\n" +
	"\aenabled\x18\x03 \x01(\bR\aenabled\x12?\n" +
	"\fdependencies\x18\x04 \x03(\v2\x1b.server.StoreKindDependencyR\fdependencies\x12\x12\n" +
	"\x04link\x18\x05 \x01(\tR\x04link\x12.\n" +
	"\x06params\x18\x06 \x03(\v2\x16.server.StoreKindParamR\x06params\x12\x1e\n" +
	"\n" +
	"categories\x18\a \x03(\tR\n" +
	"categories\")\n" +
	"\x13StoreKindDependency\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\"|\n" +
	"\x0eStoreKindParam\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12 \n" +
	"\vdescription\x18\x02 \x01(\tR\vdescription\x12\"\n" +
	"\fdefaultValue\x18\x03 \x01(\tR\fdefaultValue\x12\x12\n" +
	"\x04enum\x18\x04 \x03(\tR\x04enum\"B\n" +
	"\fCommonResult\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\x12\x18\n" +
	"\amessage\x18\x02 \x01(\tR\amessage\".\n" +
	"\n" +
	"SimpleList\x12 \n" +
	"\x04data\x18\x01 \x03(\v2\f.server.PairR\x04data\" \n" +
	"\n" +
	"SimpleName\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\"}\n" +
	"\x13CodeGenerateRequest\x12\x1c\n" +
	"\tTestSuite\x18\x01 \x01(\tR\tTestSuite\x12\x1a\n" +
	"\bTestCase\x18\x02 \x01(\tR\bTestCase\x12\x1c\n" +
	"\tGenerator\x18\x03 \x01(\tR\tGenerator\x12\x0e\n" +
	"\x02ID\x18\x04 \x01(\tR\x02ID\"-\n" +
	"\aSecrets\x12\"\n" +
	"\x04data\x18\x01 \x03(\v2\x0e.server.SecretR\x04data\"T\n" +
	"\x06Secret\x12\x12\n" +
	"\x04Name\x18\x01 \x01(\tR\x04Name\x12\x14\n" +
	"\x05Value\x18\x02 \x01(\tR\x05Value\x12 \n" +
	"\vDescription\x18\x03 \x01(\tR\vDescription\"w\n" +
	"\x0fExtensionStatus\x12\x14\n" +
	"\x05ready\x18\x01 \x01(\bR\x05ready\x12\x1a\n" +
	"\breadOnly\x18\x02 \x01(\bR\breadOnly\x12\x18\n" +
	"\aversion\x18\x03 \x01(\tR\aversion\x12\x18\n" +
	"\amessage\x18\x04 \x01(\tR\amessage\"\"\n" +
	"\fPProfRequest\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\"\x1f\n" +
	"\tPProfData\x12\x12\n" +
	"\x04data\x18\x01 \x01(\fR\x04data\"]\n" +
	"\bFileData\x12\x12\n" +
	"\x04data\x18\x01 \x01(\fR\x04data\x12!\n" +
	"\fcontent_type\x18\x02 \x01(\tR\vcontentType\x12\x1a\n" +
	"\bfilename\x18\x03 \x01(\tR\bfilename\"\a\n" +
	"\x05Empty\"\xd4\x01\n" +
	"\n" +
	"MockConfig\x12\x16\n" +
	"\x06Prefix\x18\x01 \x01(\tR\x06Prefix\x12\x16\n" +
	"\x06Config\x18\x02 \x01(\tR\x06Config\x12\x12\n" +
	"\x04Port\x18\x03 \x01(\x05R\x04Port\x12\x1c\n" +
	"\tstoreKind\x18\x04 \x01(\tR\tstoreKind\x12&\n" +
	"\x0estoreLocalFile\x18\x05 \x01(\tR\x0estoreLocalFile\x12\x1a\n" +
	"\bstoreURL\x18\x06 \x01(\tR\bstoreURL\x12 \n" +
	"\vstoreRemote\x18\a \x01(\tR\vstoreRemote\"O\n" +
	"\aVersion\x12\x18\n" +
	"\aversion\x18\x01 \x01(\tR\aversion\x12\x16\n" +
	"\x06commit\x18\x02 \x01(\tR\x06commit\x12\x12\n" +
	"\x04date\x18\x03 \x01(\tR\x04date\"G\n" +
	"\vProxyConfig\x12\x12\n" +
	"\x04http\x18\x01 \x01(\tR\x04http\x12\x14\n" +
	"\x05https\x18\x02 \x01(\tR\x05https\x12\x0e\n" +
	"\x02no\x18\x03 \x01(\tR\x02no\"\xeb\x02\n" +
	"\tDataQuery\x12\x12\n" +
	"\x04type\x18\x01 \x01(\tR\x04type\x12\x10\n" +
	"\x03key\x18\x02 \x01(\tR\x03key\x12\x10\n" +
	"\x03sql\x18\x03 \x01(\tR\x03sql\x12\x16\n" +
	"\x06offset\x18\x04 \x01(\x03R\x06offset\x12\x14\n" +
	"\x05limit\x18\x05 \x01(\x03R\x05limit\x12)\n" +
	"\x10natural_language\x18\n" +
	" \x01(\tR\x0fnaturalLanguage\x12#\n" +
	"\rdatabase_type\x18\v \x01(\tR\fdatabaseType\x12#\n" +
	"\rexplain_query\x18\f \x01(\bR\fexplainQuery\x12?\n" +
	"\n" +
	"ai_context\x18\r \x03(\v2 .server.DataQuery.AiContextEntryR\taiContext\x1a<\n" +
	"\x0eAiContextEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01J\x04\b\x0e\x10\x15\"\xb1\x01\n" +
	"\x0fDataQueryResult\x12 \n" +
	"\x04data\x18\x01 \x03(\v2\f.server.PairR\x04data\x12#\n" +
	"\x05items\x18\x02 \x03(\v2\r.server.PairsR\x05items\x12$\n" +
	"\x04meta\x18\x03 \x01(\v2\x10.server.DataMetaR\x04meta\x121\n" +
	"\aai_info\x18\n" +
	" \x01(\v2\x18.server.AIProcessingInfoR\x06aiInfo\"\xac\x01\n" +
	"\bDataMeta\x12\x1c\n" +
	"\tdatabases\x18\x01 \x03(\tR\tdatabases\x12\x16\n" +
	"\x06tables\x18\x02 \x03(\tR\x06tables\x12(\n" +
	"\x0fcurrentDatabase\x18\x03 \x01(\tR\x0fcurrentDatabase\x12\x1a\n" +
	"\bduration\x18\x04 \x01(\tR\bduration\x12$\n" +
	"\x06labels\x18\x05 \x03(\v2\f.server.PairR\x06labels\"\xba\x02\n" +
	"\x12GenerateSQLRequest\x12)\n" +
	"\x10natural_language\x18\x01 \x01(\tR\x0fnaturalLanguage\x12?\n" +
	"\x0fdatabase_target\x18\x02 \x01(\v2\x16.server.DatabaseTargetR\x0edatabaseTarget\x123\n" +
	"\aoptions\x18\x03 \x01(\v2\x19.server.GenerationOptionsR\aoptions\x12A\n" +
	"\acontext\x18\x04 \x03(\v2'.server.GenerateSQLRequest.ContextEntryR\acontext\x1a:\n" +
	"\fContextEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01J\x04\b\x05\x10\v\"\x88\x02\n" +
	"\x13GenerateSQLResponse\x12#\n" +
	"\rgenerated_sql\x18\x01 \x01(\tR\fgeneratedSql\x12)\n" +
	"\x10confidence_score\x18\x02 \x01(\x02R\x0fconfidenceScore\x12 \n" +
	"\vexplanation\x18\x03 \x01(\tR\vexplanation\x12 \n" +
	"\vsuggestions\x18\x04 \x03(\tR\vsuggestions\x12%\n" +
	"\x05error\x18\x05 \x01(\v2\x0f.server.AIErrorR\x05error\x126\n" +
	"\bmetadata\x18\x06 \x01(\v2\x1a.server.GenerationMetadataR\bmetadata\"\xca\x01\n" +
	"\x12ValidateSQLRequest\x12\x10\n" +
	"\x03sql\x18\x01 \x01(\tR\x03sql\x12#\n" +
	"\rdatabase_type\x18\x02 \x01(\tR\fdatabaseType\x12A\n" +
	"\acontext\x18\x03 \x03(\v2'.server.ValidateSQLRequest.ContextEntryR\acontext\x1a:\n" +
	"\fContextEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\xda\x01\n" +
	"\x13ValidateSQLResponse\x12\x19\n" +
	"\bis_valid\x18\x01 \x01(\bR\aisValid\x12/\n" +
	"\x06errors\x18\x02 \x03(\v2\x17.server.ValidationErrorR\x06errors\x12\x1a\n" +
	"\bwarnings\x18\x03 \x03(\tR\bwarnings\x12#\n" +
	"\rformatted_sql\x18\x04 \x01(\tR\fformattedSql\x126\n" +
	"\bmetadata\x18\x05 \x01(\v2\x1a.server.ValidationMetadataR\bmetadata\"\xbf\x02\n" +
	"\x16AICapabilitiesResponse\x12/\n" +
	"\x13supported_databases\x18\x01 \x03(\tR\x12supportedDatabases\x12-\n" +
	"\bfeatures\x18\x02 \x03(\v2\x11.server.AIFeatureR\bfeatures\x12\x18\n" +
	"\aversion\x18\x03 \x01(\tR\aversion\x12,\n" +
	"\x06status\x18\x04 \x01(\x0e2\x14.server.HealthStatusR\x06status\x12B\n" +
	"\x06limits\x18\x05 \x03(\v2*.server.AICapabilitiesResponse.LimitsEntryR\x06limits\x1a9\n" +
	"\vLimitsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\xd7\x01\n" +
	"\x0eDatabaseTarget\x12\x12\n" +
	"\x04type\x18\x01 \x01(\tR\x04type\x12\x18\n" +
	"\aversion\x18\x02 \x01(\tR\aversion\x12\x18\n" +
	"\aschemas\x18\x03 \x03(\tR\aschemas\x12@\n" +
	"\bmetadata\x18\x04 \x03(\v2$.server.DatabaseTarget.MetadataEntryR\bmetadata\x1a;\n" +
	"\rMetadataEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\xf6\x01\n" +
	"\x11GenerationOptions\x12/\n" +
	"\x13include_explanation\x18\x01 \x01(\bR\x12includeExplanation\x12#\n" +
	"\rformat_output\x18\x02 \x01(\bR\fformatOutput\x12'\n" +
	"\x0fmax_suggestions\x18\x03 \x01(\x05R\x0emaxSuggestions\x121\n" +
	"\x14confidence_threshold\x18\x04 \x01(\x02R\x13confidenceThreshold\x12/\n" +
	"\x13enable_optimization\x18\x05 \x01(\bR\x12enableOptimization\"\xc8\x01\n" +
	"\x10AIProcessingInfo\x12\x1d\n" +
	"\n" +
	"request_id\x18\x01 \x01(\tR\trequestId\x12,\n" +
	"\x12processing_time_ms\x18\x02 \x01(\x02R\x10processingTimeMs\x12\x1d\n" +
	"\n" +
	"model_used\x18\x03 \x01(\tR\tmodelUsed\x12)\n" +
	"\x10confidence_score\x18\x04 \x01(\x02R\x0fconfidenceScore\x12\x1d\n" +
	"\n" +
	"debug_info\x18\x05 \x03(\tR\tdebugInfo\"\xdb\x01\n" +
	"\x12GenerationMetadata\x12\x1d\n" +
	"\n" +
	"request_id\x18\x01 \x01(\tR\trequestId\x12,\n" +
	"\x12processing_time_ms\x18\x02 \x01(\x02R\x10processingTimeMs\x12\x1d\n" +
	"\n" +
	"model_used\x18\x03 \x01(\tR\tmodelUsed\x12\x1f\n" +
	"\vtoken_count\x18\x04 \x01(\x05R\n" +
	"tokenCount\x128\n" +
	"\ttimestamp\x18\x05 \x01(\v2\x1a.google.protobuf.TimestampR\ttimestamp\"\x88\x01\n" +
	"\x0fValidationError\x12\x18\n" +
	"\amessage\x18\x01 \x01(\tR\amessage\x12\x12\n" +
	"\x04line\x18\x02 \x01(\x05R\x04line\x12\x16\n" +
	"\x06column\x18\x03 \x01(\x05R\x06column\x12/\n" +
	"\x04type\x18\x04 \x01(\x0e2\x1b.server.ValidationErrorTypeR\x04type\"\xa9\x01\n" +
	"\x12ValidationMetadata\x12+\n" +
	"\x11validator_version\x18\x01 \x01(\tR\x10validatorVersion\x12,\n" +
	"\x12validation_time_ms\x18\x02 \x01(\x02R\x10validationTimeMs\x128\n" +
	"\ttimestamp\x18\x03 \x01(\v2\x1a.google.protobuf.TimestampR\ttimestamp\"\xdd\x01\n" +
	"\tAIFeature\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12\x18\n" +
	"\aenabled\x18\x02 \x01(\bR\aenabled\x12 \n" +
	"\vdescription\x18\x03 \x01(\tR\vdescription\x12A\n" +
	"\n" +
	"parameters\x18\x04 \x03(\v2!.server.AIFeature.ParametersEntryR\n" +
	"parameters\x1a=\n" +
	"\x0fParametersEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"f\n" +
	"\aAIError\x12'\n" +
	"\x04code\x18\x01 \x01(\x0e2\x13.server.AIErrorCodeR\x04code\x12\x18\n" +
	"\amessage\x18\x02 \x01(\tR\amessage\x12\x18\n" +
	"\adetails\x18\x03 \x01(\tR\adetails*\x91\x01\n" +
	"\x13ValidationErrorType\x12%\n" +
	"!VALIDATION_ERROR_TYPE_UNSPECIFIED\x10\x00\x12\x10\n" +
	"\fSYNTAX_ERROR\x10\x01\x12\x12\n" +
	"\x0eSEMANTIC_ERROR\x10\x02\x12\x17\n" +
	"\x13PERFORMANCE_WARNING\x10\x03\x12\x14\n" +
	"\x10SECURITY_WARNING\x10\x04*W\n" +
	"\fHealthStatus\x12\x1d\n" +
	"\x19HEALTH_STATUS_UNSPECIFIED\x10\x00\x12\v\n" +
	"\aHEALTHY\x10\x01\x12\f\n" +
	"\bDEGRADED\x10\x02\x12\r\n" +
	"\tUNHEALTHY\x10\x03*\x97\x01\n" +
	"\vAIErrorCode\x12\x1d\n" +
	"\x19AI_ERROR_CODE_UNSPECIFIED\x10\x00\x12\x11\n" +
	"\rINVALID_INPUT\x10\x01\x12\x15\n" +
	"\x11MODEL_UNAVAILABLE\x10\x02\x12\x10\n" +
	"\fRATE_LIMITED\x10\x03\x12\x14\n" +
	"\x10PROCESSING_ERROR\x10\x04\x12\x17\n" +
	"\x13CONFIGURATION_ERROR\x10\x052\xb9(\n" +
	"\x06Runner\x12C\n" +
	"\x03Run\x12\x10.server.TestTask\x1a\x12.server.TestResult\"\x16\x82\xd3\xe4\x93\x02\x10:\x01*\"\v/api/v1/run\x12_\n" +
	"\fRunTestSuite\x12\x19.server.TestSuiteIdentity\x1a\x12.server.TestResult\"\x1c\x82\xd3\xe4\x93\x02\x16:\x01*\"\x11/api/v1/run/suite(\x010\x01\x12B\n" +
	"\tGetSuites\x12\r.server.Empty\x1a\x0e.server.Suites\"\x16\x82\xd3\xe4\x93\x02\x10\x12\x0e/api/v1/suites\x12[\n" +
	"\x0fCreateTestSuite\x12\x19.server.TestSuiteIdentity\x1a\x12.server.HelloReply\"\x19\x82\xd3\xe4\x93\x02\x13:\x01*\"\x0e/api/v1/suites\x12b\n" +
	"\x0fImportTestSuite\x12\x17.server.TestSuiteSource\x1a\x14.server.CommonResult\" \x82\xd3\xe4\x93\x02\x1a:\x01*\"\x15/api/v1/suites/import\x12[\n" +
	"\fGetTestSuite\x12\x19.server.TestSuiteIdentity\x1a\x11.server.TestSuite\"\x1d\x82\xd3\xe4\x93\x02\x17\x12\x15/api/v1/suites/{name}\x12Z\n" +
	"\x0fUpdateTestSuite\x12\x11.server.TestSuite\x1a\x12.server.HelloReply\" \x82\xd3\xe4\x93\x02\x1a:\x01*\x1a\x15/api/v1/suites/{name}\x12_\n" +
	"\x0fDeleteTestSuite\x12\x19.server.TestSuiteIdentity\x1a\x12.server.HelloReply\"\x1d\x82\xd3\xe4\x93\x02\x17*\x15/api/v1/suites/{name}\x12{\n" +
	"\x12DuplicateTestSuite\x12\x1a.server.TestSuiteDuplicate\x1a\x12.server.HelloReply\"5\x82\xd3\xe4\x93\x02/:\x01*\"*/api/v1/suites/{sourceSuiteName}/duplicate\x12u\n" +
	"\x0fRenameTestSuite\x12\x1a.server.TestSuiteDuplicate\x1a\x12.server.HelloReply\"2\x82\xd3\xe4\x93\x02,:\x01*\"'/api/v1/suites/{sourceSuiteName}/rename\x12c\n" +
	"\x10GetTestSuiteYaml\x12\x19.server.TestSuiteIdentity\x1a\x10.server.YamlData\"\"\x82\xd3\xe4\x93\x02\x1c\x12\x1a/api/v1/suites/{name}/yaml\x12]\n" +
	"\fListTestCase\x12\x19.server.TestSuiteIdentity\x1a\r.server.Suite\"#\x82\xd3\xe4\x93\x02\x1d\x12\x1b/api/v1/suites/{name}/cases\x12w\n" +
	"\vRunTestCase\x12\x18.server.TestCaseIdentity\x1a\x16.server.TestCaseResult\"6\x82\xd3\xe4\x93\x020:\x01*\"+/api/v1/suites/{suite}/cases/{testcase}/run\x12V\n" +
	"\bBatchRun\x12\x15.server.BatchTestTask\x1a\x12.server.TestResult\"\x1b\x82\xd3\xe4\x93\x02\x15:\x01*\"\x10/api/v1/batchRun(\x010\x01\x12j\n" +
	"\vGetTestCase\x12\x18.server.TestCaseIdentity\x1a\x10.server.TestCase\"/\x82\xd3\xe4\x93\x02)\x12'/api/v1/suites/{suite}/cases/{testcase}\x12l\n" +
	"\x0eCreateTestCase\x12\x19.server.TestCaseWithSuite\x1a\x12.server.HelloReply\"+\x82\xd3\xe4\x93\x02%:\x01*\" /api/v1/suites/{suiteName}/cases\x12x\n" +
	"\x0eUpdateTestCase\x12\x19.server.TestCaseWithSuite\x1a\x12.server.HelloReply\"7\x82\xd3\xe4\x93\x021:\x01*\x1a,/api/v1/suites/{suiteName}/cases/{data.name}\x12o\n" +
	"\x0eDeleteTestCase\x12\x18.server.TestCaseIdentity\x1a\x12.server.HelloReply\"/\x82\xd3\xe4\x93\x02)*'/api/v1/suites/{suite}/cases/{testcase}\x12\x90\x01\n" +
	"\x11DuplicateTestCase\x12\x19.server.TestCaseDuplicate\x1a\x12.server.HelloReply\"L\x82\xd3\xe4\x93\x02F:\x01*\"A/api/v1/suites/{sourceSuiteName}/cases/{sourceCaseName}/duplicate\x12\x8a\x01\n" +
	"\x0eRenameTestCase\x12\x19.server.TestCaseDuplicate\x1a\x12.server.HelloReply\"I\x82\xd3\xe4\x93\x02C:\x01*\">/api/v1/suites/{sourceSuiteName}/cases/{sourceCaseName}/rename\x12_\n" +
	"\x10GetSuggestedAPIs\x12\x19.server.TestSuiteIdentity\x1a\x11.server.TestCases\"\x1d\x82\xd3\xe4\x93\x02\x17\x12\x15/api/v1/suggestedAPIs\x12W\n" +
	"\x10GetHistorySuites\x12\r.server.Empty\x1a\x15.server.HistorySuites\"\x1d\x82\xd3\xe4\x93\x02\x17\"\x15/api/v1/historySuites\x12\x82\x01\n" +
	"\x1cGetHistoryTestCaseWithResult\x12\x17.server.HistoryTestCase\x1a\x19.server.HistoryTestResult\".\x82\xd3\xe4\x93\x02(\x12&/api/v1/historyTestCaseWithResult/{ID}\x12l\n" +
	"\x12GetHistoryTestCase\x12\x17.server.HistoryTestCase\x1a\x17.server.HistoryTestCase\"$\x82\xd3\xe4\x93\x02\x1e\x12\x1c/api/v1/historyTestCase/{ID}\x12j\n" +
	"\x15DeleteHistoryTestCase\x12\x17.server.HistoryTestCase\x1a\x12.server.HelloReply\"$\x82\xd3\xe4\x93\x02\x1e*\x1c/api/v1/historyTestCase/{ID}\x12\x83\x01\n" +
	"\x18DeleteAllHistoryTestCase\x12\x17.server.HistoryTestCase\x1a\x12.server.HelloReply\":\x82\xd3\xe4\x93\x024*2/api/v1/historySuites/{suiteName}/cases/{caseName}\x12t\n" +
	"\x15GetTestCaseAllHistory\x12\x10.server.TestCase\x1a\x18.server.HistoryTestCases\"/\x82\xd3\xe4\x93\x02)\"'/api/v1/suites/{suiteName}/cases/{name}\x12V\n" +
	"\x11ListCodeGenerator\x12\r.server.Empty\x1a\x12.server.SimpleList\"\x1e\x82\xd3\xe4\x93\x02\x18\x12\x16/api/v1/codeGenerators\x12m\n" +
	"\fGenerateCode\x12\x1b.server.CodeGenerateRequest\x1a\x14.server.CommonResult\"*\x82\xd3\xe4\x93\x02$:\x01*\"\x1f/api/v1/codeGenerators/generate\x12|\n" +
	"\x13HistoryGenerateCode\x12\x1b.server.CodeGenerateRequest\x1a\x14.server.CommonResult\"2\x82\xd3\xe4\x93\x02,:\x01*\"'/api/v1/codeGenerators/history/generate\x12N\n" +
	"\rListConverter\x12\r.server.Empty\x1a\x12.server.SimpleList\"\x1a\x82\xd3\xe4\x93\x02\x14\x12\x12/api/v1/converters\x12l\n" +
	"\x10ConvertTestSuite\x12\x1b.server.CodeGenerateRequest\x1a\x14.server.CommonResult\"%\x82\xd3\xe4\x93\x02\x1f:\x01*\"\x1a/api/v1/converters/convert\x12N\n" +
	"\x0ePopularHeaders\x12\r.server.Empty\x1a\r.server.Pairs\"\x1e\x82\xd3\xe4\x93\x02\x18\x12\x16/api/v1/popularHeaders\x12O\n" +
	"\x0eFunctionsQuery\x12\x13.server.SimpleQuery\x1a\r.server.Pairs\"\x19\x82\xd3\xe4\x93\x02\x13\x12\x11/api/v1/functions\x12^\n" +
	"\x14FunctionsQueryStream\x12\x13.server.SimpleQuery\x1a\r.server.Pairs\"\x1e\x82\xd3\xe4\x93\x02\x18\x12\x16/api/v1/functionsQuery(\x010\x01\x12V\n" +
	"\tGetSchema\x12\x13.server.SimpleQuery\x1a\x14.server.CommonResult\"\x1e\x82\xd3\xe4\x93\x02\x18\x12\x16/api/v1/schemas/{name}\x12E\n" +
	"\n" +
	"GetVersion\x12\r.server.Empty\x1a\x0f.server.Version\"\x17\x82\xd3\xe4\x93\x02\x11\x12\x0f/api/v1/version\x12C\n" +
	"\x06Sample\x12\r.server.Empty\x1a\x12.server.HelloReply\"\x16\x82\xd3\xe4\x93\x02\x10\x12\x0e/api/v1/sample\x12h\n" +
	"\x14DownloadResponseFile\x12\x10.server.TestCase\x1a\x10.server.FileData\",\x82\xd3\xe4\x93\x02&\x12$/api/v1/downloadFile/{response.body}\x12P\n" +
	"\rGetStoreKinds\x12\r.server.Empty\x1a\x12.server.StoreKinds\"\x1c\x82\xd3\xe4\x93\x02\x16\x12\x14/api/v1/stores/kinds\x12H\n" +
	"\tGetStores\x12\x13.server.SimpleQuery\x1a\x0e.server.Stores\"\x16\x82\xd3\xe4\x93\x02\x10\x12\x0e/api/v1/stores\x12F\n" +
	"\vCreateStore\x12\r.server.Store\x1a\r.server.Store\"\x19\x82\xd3\xe4\x93\x02\x13:\x01*\"\x0e/api/v1/stores\x12M\n" +
	"\vUpdateStore\x12\r.server.Store\x1a\r.server.Store\" \x82\xd3\xe4\x93\x02\x1a:\x01*\x1a\x15/api/v1/stores/{name}\x12J\n" +
	"\vDeleteStore\x12\r.server.Store\x1a\r.server.Store\"\x1d\x82\xd3\xe4\x93\x02\x17*\x15/api/v1/stores/{name}\x12]\n" +
	"\vVerifyStore\x12\x13.server.SimpleQuery\x1a\x17.server.ExtensionStatus\" \x82\xd3\xe4\x93\x02\x1a:\x01*\"\x15/api/v1/stores/verify\x12E\n" +
	"\n" +
	"GetSecrets\x12\r.server.Empty\x1a\x0f.server.Secrets\"\x17\x82\xd3\xe4\x93\x02\x11\x12\x0f/api/v1/secrets\x12P\n" +
	"\fCreateSecret\x12\x0e.server.Secret\x1a\x14.server.CommonResult\"\x1a\x82\xd3\xe4\x93\x02\x14:\x01*\"\x0f/api/v1/secrets\x12T\n" +
	"\fDeleteSecret\x12\x0e.server.Secret\x1a\x14.server.CommonResult\"\x1e\x82\xd3\xe4\x93\x02\x18*\x16/api/v1/secrets/{Name}\x12W\n" +
	"\fUpdateSecret\x12\x0e.server.Secret\x1a\x14.server.CommonResult\"!\x82\xd3\xe4\x93\x02\x1b:\x01*\x1a\x16/api/v1/secrets/{Name}\x12j\n" +
	"\vGenerateSQL\x12\x1a.server.GenerateSQLRequest\x1a\x1b.server.GenerateSQLResponse\"\"\x82\xd3\xe4\x93\x02\x1c:\x01*\"\x17/api/v1/ai/sql:generate\x12c\n" +
	"\x11GetAICapabilities\x12\r.server.Empty\x1a\x1e.server.AICapabilitiesResponse\"\x1f\x82\xd3\xe4\x93\x02\x19\x12\x17/api/v1/ai/capabilities\x12j\n" +
	"\vValidateSQL\x12\x1a.server.ValidateSQLRequest\x1a\x1b.server.ValidateSQLResponse\"\"\x82\xd3\xe4\x93\x02\x1c:\x01*\"\x17/api/v1/ai/sql:validate\x122\n" +
	"\x05PProf\x12\x14.server.PProfRequest\x1a\x11.server.PProfData\"\x002k\n" +
	"\x0fRunnerExtension\x12X\n" +
	"\x03Run\x12\x19.server.TestSuiteWithCase\x1a\x14.server.CommonResult\" \x82\xd3\xe4\x93\x02\x1a:\x01*\"\x15/api/v1/extension/run2\x91\x03\n" +
	"\vUIExtension\x12L\n" +
	"\bGetMenus\x12\r.server.Empty\x1a\x10.server.MenuList\"\x1f\x82\xd3\xe4\x93\x02\x19\x12\x17/api/v1/extension/menus\x12b\n" +
	"\vGetPageOfJS\x12\x12.server.SimpleName\x1a\x14.server.CommonResult\")\x82\xd3\xe4\x93\x02#\x12!/api/v1/extension/pages/{name}/js\x12d\n" +
	"\fGetPageOfCSS\x12\x12.server.SimpleName\x1a\x14.server.CommonResult\"*\x82\xd3\xe4\x93\x02$\x12\"/api/v1/extension/pages/{name}/css\x12j\n" +
	"\x0fGetPageOfStatic\x12\x12.server.SimpleName\x1a\x14.server.CommonResult\"-\x82\xd3\xe4\x93\x02'\x12%/api/v1/extension/pages/{name}/static2\xd2\x02\n" +
	"\x0eThemeExtension\x12F\n" +
	"\tGetThemes\x12\r.server.Empty\x1a\x12.server.SimpleList\"\x16\x82\xd3\xe4\x93\x02\x10\x12\x0e/api/v1/themes\x12S\n" +
	"\bGetTheme\x12\x12.server.SimpleName\x1a\x14.server.CommonResult\"\x1d\x82\xd3\xe4\x93\x02\x17\x12\x15/api/v1/themes/{name}\x12J\n" +
	"\vGetBindings\x12\r.server.Empty\x1a\x12.server.SimpleList\"\x18\x82\xd3\xe4\x93\x02\x12\x12\x10/api/v1/bindings\x12W\n" +
	"\n" +
	"GetBinding\x12\x12.server.SimpleName\x1a\x14.server.CommonResult\"\x1f\x82\xd3\xe4\x93\x02\x19\x12\x17/api/v1/bindings/{name}2\xed\x01\n" +
	"\x04Mock\x12K\n" +
	"\x06Reload\x12\x12.server.MockConfig\x1a\r.server.Empty\"\x1e\x82\xd3\xe4\x93\x02\x18:\x01*\"\x13/api/v1/mock/reload\x12K\n" +
	"\tGetConfig\x12\r.server.Empty\x1a\x12.server.MockConfig\"\x1b\x82\xd3\xe4\x93\x02\x15\x12\x13/api/v1/mock/config\x12K\n" +
	"\bLogWatch\x12\r.server.Empty\x1a\x14.server.CommonResult\"\x18\x82\xd3\xe4\x93\x02\x12\x12\x10/api/v1/mock/log0\x012`\n" +
	"\n" +
	"DataServer\x12R\n" +
	"\x05Query\x12\x11.server.DataQuery\x1a\x17.server.DataQueryResult\"\x1d\x82\xd3\xe4\x93\x02\x17:\x01*\"\x12/api/v1/data/queryB.Z,github.com/linuxsuren/api-testing/pkg/serverb\x06proto3"

var (
	file_pkg_server_server_proto_rawDescOnce sync.Once
	file_pkg_server_server_proto_rawDescData []byte
)

func file_pkg_server_server_proto_rawDescGZIP() []byte {
	file_pkg_server_server_proto_rawDescOnce.Do(func() {
		file_pkg_server_server_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_pkg_server_server_proto_rawDesc), len(file_pkg_server_server_proto_rawDesc)))
	})
	return file_pkg_server_server_proto_rawDescData
}

var file_pkg_server_server_proto_enumTypes = make([]protoimpl.EnumInfo, 3)
var file_pkg_server_server_proto_msgTypes = make([]protoimpl.MessageInfo, 81)
var file_pkg_server_server_proto_goTypes = []any{
	(ValidationErrorType)(0),       // 0: server.ValidationErrorType
	(HealthStatus)(0),              // 1: server.HealthStatus
	(AIErrorCode)(0),               // 2: server.AIErrorCode
	(*Menu)(nil),                   // 3: server.Menu
	(*MenuList)(nil),               // 4: server.MenuList
	(*Suites)(nil),                 // 5: server.Suites
	(*Items)(nil),                  // 6: server.Items
	(*HistorySuites)(nil),          // 7: server.HistorySuites
	(*HistoryItems)(nil),           // 8: server.HistoryItems
	(*HistoryCaseIdentity)(nil),    // 9: server.HistoryCaseIdentity
	(*TestCaseIdentity)(nil),       // 10: server.TestCaseIdentity
	(*TestSuiteSource)(nil),        // 11: server.TestSuiteSource
	(*TestSuite)(nil),              // 12: server.TestSuite
	(*TestSuiteWithCase)(nil),      // 13: server.TestSuiteWithCase
	(*APISpec)(nil),                // 14: server.APISpec
	(*Secure)(nil),                 // 15: server.Secure
	(*RPC)(nil),                    // 16: server.RPC
	(*TestSuiteIdentity)(nil),      // 17: server.TestSuiteIdentity
	(*TestSuiteDuplicate)(nil),     // 18: server.TestSuiteDuplicate
	(*TestCaseDuplicate)(nil),      // 19: server.TestCaseDuplicate
	(*TestTask)(nil),               // 20: server.TestTask
	(*BatchTestTask)(nil),          // 21: server.BatchTestTask
	(*TestResult)(nil),             // 22: server.TestResult
	(*HistoryTestResult)(nil),      // 23: server.HistoryTestResult
	(*HelloReply)(nil),             // 24: server.HelloReply
	(*YamlData)(nil),               // 25: server.YamlData
	(*Suite)(nil),                  // 26: server.Suite
	(*TestCaseWithSuite)(nil),      // 27: server.TestCaseWithSuite
	(*TestCases)(nil),              // 28: server.TestCases
	(*TestCase)(nil),               // 29: server.TestCase
	(*HistoryTestCase)(nil),        // 30: server.HistoryTestCase
	(*HistoryTestCases)(nil),       // 31: server.HistoryTestCases
	(*Request)(nil),                // 32: server.Request
	(*Response)(nil),               // 33: server.Response
	(*ConditionalVerify)(nil),      // 34: server.ConditionalVerify
	(*TestCaseResult)(nil),         // 35: server.TestCaseResult
	(*Pair)(nil),                   // 36: server.Pair
	(*Pairs)(nil),                  // 37: server.Pairs
	(*SimpleQuery)(nil),            // 38: server.SimpleQuery
	(*Stores)(nil),                 // 39: server.Stores
	(*Store)(nil),                  // 40: server.Store
	(*StoreKinds)(nil),             // 41: server.StoreKinds
	(*StoreKind)(nil),              // 42: server.StoreKind
	(*StoreKindDependency)(nil),    // 43: server.StoreKindDependency
	(*StoreKindParam)(nil),         // 44: server.StoreKindParam
	(*CommonResult)(nil),           // 45: server.CommonResult
	(*SimpleList)(nil),             // 46: server.SimpleList
	(*SimpleName)(nil),             // 47: server.SimpleName
	(*CodeGenerateRequest)(nil),    // 48: server.CodeGenerateRequest
	(*Secrets)(nil),                // 49: server.Secrets
	(*Secret)(nil),                 // 50: server.Secret
	(*ExtensionStatus)(nil),        // 51: server.ExtensionStatus
	(*PProfRequest)(nil),           // 52: server.PProfRequest
	(*PProfData)(nil),              // 53: server.PProfData
	(*FileData)(nil),               // 54: server.FileData
	(*Empty)(nil),                  // 55: server.Empty
	(*MockConfig)(nil),             // 56: server.MockConfig
	(*Version)(nil),                // 57: server.Version
	(*ProxyConfig)(nil),            // 58: server.ProxyConfig
	(*DataQuery)(nil),              // 59: server.DataQuery
	(*DataQueryResult)(nil),        // 60: server.DataQueryResult
	(*DataMeta)(nil),               // 61: server.DataMeta
	(*GenerateSQLRequest)(nil),     // 62: server.GenerateSQLRequest
	(*GenerateSQLResponse)(nil),    // 63: server.GenerateSQLResponse
	(*ValidateSQLRequest)(nil),     // 64: server.ValidateSQLRequest
	(*ValidateSQLResponse)(nil),    // 65: server.ValidateSQLResponse
	(*AICapabilitiesResponse)(nil), // 66: server.AICapabilitiesResponse
	(*DatabaseTarget)(nil),         // 67: server.DatabaseTarget
	(*GenerationOptions)(nil),      // 68: server.GenerationOptions
	(*AIProcessingInfo)(nil),       // 69: server.AIProcessingInfo
	(*GenerationMetadata)(nil),     // 70: server.GenerationMetadata
	(*ValidationError)(nil),        // 71: server.ValidationError
	(*ValidationMetadata)(nil),     // 72: server.ValidationMetadata
	(*AIFeature)(nil),              // 73: server.AIFeature
	(*AIError)(nil),                // 74: server.AIError
	nil,                            // 75: server.Suites.DataEntry
	nil,                            // 76: server.HistorySuites.DataEntry
	nil,                            // 77: server.TestTask.EnvEntry
	nil,                            // 78: server.DataQuery.AiContextEntry
	nil,                            // 79: server.GenerateSQLRequest.ContextEntry
	nil,                            // 80: server.ValidateSQLRequest.ContextEntry
	nil,                            // 81: server.AICapabilitiesResponse.LimitsEntry
	nil,                            // 82: server.DatabaseTarget.MetadataEntry
	nil,                            // 83: server.AIFeature.ParametersEntry
	(*timestamppb.Timestamp)(nil),  // 84: google.protobuf.Timestamp
}
var file_pkg_server_server_proto_depIdxs = []int32{
	3,   // 0: server.MenuList.data:type_name -> server.Menu
	75,  // 1: server.Suites.data:type_name -> server.Suites.DataEntry
	76,  // 2: server.HistorySuites.data:type_name -> server.HistorySuites.DataEntry
	9,   // 3: server.HistoryItems.data:type_name -> server.HistoryCaseIdentity
	36,  // 4: server.TestCaseIdentity.parameters:type_name -> server.Pair
	36,  // 5: server.TestSuite.param:type_name -> server.Pair
	14,  // 6: server.TestSuite.spec:type_name -> server.APISpec
	58,  // 7: server.TestSuite.proxy:type_name -> server.ProxyConfig
	12,  // 8: server.TestSuiteWithCase.suite:type_name -> server.TestSuite
	29,  // 9: server.TestSuiteWithCase.case:type_name -> server.TestCase
	16,  // 10: server.APISpec.rpc:type_name -> server.RPC
	15,  // 11: server.APISpec.secure:type_name -> server.Secure
	77,  // 12: server.TestTask.env:type_name -> server.TestTask.EnvEntry
	36,  // 13: server.TestTask.parameters:type_name -> server.Pair
	36,  // 14: server.BatchTestTask.parameters:type_name -> server.Pair
	35,  // 15: server.TestResult.testCaseResult:type_name -> server.TestCaseResult
	35,  // 16: server.HistoryTestResult.testCaseResult:type_name -> server.TestCaseResult
	30,  // 17: server.HistoryTestResult.data:type_name -> server.HistoryTestCase
	84,  // 18: server.HistoryTestResult.createTime:type_name -> google.protobuf.Timestamp
	29,  // 19: server.Suite.items:type_name -> server.TestCase
	29,  // 20: server.TestCaseWithSuite.data:type_name -> server.TestCase
	29,  // 21: server.TestCases.data:type_name -> server.TestCase
	32,  // 22: server.TestCase.request:type_name -> server.Request
	33,  // 23: server.TestCase.response:type_name -> server.Response
	84,  // 24: server.HistoryTestCase.createTime:type_name -> google.protobuf.Timestamp
	36,  // 25: server.HistoryTestCase.suiteParam:type_name -> server.Pair
	14,  // 26: server.HistoryTestCase.suiteSpec:type_name -> server.APISpec
	32,  // 27: server.HistoryTestCase.request:type_name -> server.Request
	33,  // 28: server.HistoryTestCase.response:type_name -> server.Response
	36,  // 29: server.HistoryTestCase.historyHeader:type_name -> server.Pair
	30,  // 30: server.HistoryTestCases.data:type_name -> server.HistoryTestCase
	36,  // 31: server.Request.header:type_name -> server.Pair
	36,  // 32: server.Request.query:type_name -> server.Pair
	36,  // 33: server.Request.cookie:type_name -> server.Pair
	36,  // 34: server.Request.form:type_name -> server.Pair
	36,  // 35: server.Response.header:type_name -> server.Pair
	36,  // 36: server.Response.bodyFieldsExpect:type_name -> server.Pair
	34,  // 37: server.Response.ConditionalVerify:type_name -> server.ConditionalVerify
	36,  // 38: server.TestCaseResult.header:type_name -> server.Pair
	36,  // 39: server.Pairs.data:type_name -> server.Pair
	40,  // 40: server.Stores.data:type_name -> server.Store
	36,  // 41: server.Store.properties:type_name -> server.Pair
	42,  // 42: server.Store.kind:type_name -> server.StoreKind
	42,  // 43: server.StoreKinds.data:type_name -> server.StoreKind
	43,  // 44: server.StoreKind.dependencies:type_name -> server.StoreKindDependency
	44,  // 45: server.StoreKind.params:type_name -> server.StoreKindParam
	36,  // 46: server.SimpleList.data:type_name -> server.Pair
	50,  // 47: server.Secrets.data:type_name -> server.Secret
	78,  // 48: server.DataQuery.ai_context:type_name -> server.DataQuery.AiContextEntry
	36,  // 49: server.DataQueryResult.data:type_name -> server.Pair
	37,  // 50: server.DataQueryResult.items:type_name -> server.Pairs
	61,  // 51: server.DataQueryResult.meta:type_name -> server.DataMeta
	69,  // 52: server.DataQueryResult.ai_info:type_name -> server.AIProcessingInfo
	36,  // 53: server.DataMeta.labels:type_name -> server.Pair
	67,  // 54: server.GenerateSQLRequest.database_target:type_name -> server.DatabaseTarget
	68,  // 55: server.GenerateSQLRequest.options:type_name -> server.GenerationOptions
	79,  // 56: server.GenerateSQLRequest.context:type_name -> server.GenerateSQLRequest.ContextEntry
	74,  // 57: server.GenerateSQLResponse.error:type_name -> server.AIError
	70,  // 58: server.GenerateSQLResponse.metadata:type_name -> server.GenerationMetadata
	80,  // 59: server.ValidateSQLRequest.context:type_name -> server.ValidateSQLRequest.ContextEntry
	71,  // 60: server.ValidateSQLResponse.errors:type_name -> server.ValidationError
	72,  // 61: server.ValidateSQLResponse.metadata:type_name -> server.ValidationMetadata
	73,  // 62: server.AICapabilitiesResponse.features:type_name -> server.AIFeature
	1,   // 63: server.AICapabilitiesResponse.status:type_name -> server.HealthStatus
	81,  // 64: server.AICapabilitiesResponse.limits:type_name -> server.AICapabilitiesResponse.LimitsEntry
	82,  // 65: server.DatabaseTarget.metadata:type_name -> server.DatabaseTarget.MetadataEntry
	84,  // 66: server.GenerationMetadata.timestamp:type_name -> google.protobuf.Timestamp
	0,   // 67: server.ValidationError.type:type_name -> server.ValidationErrorType
	84,  // 68: server.ValidationMetadata.timestamp:type_name -> google.protobuf.Timestamp
	83,  // 69: server.AIFeature.parameters:type_name -> server.AIFeature.ParametersEntry
	2,   // 70: server.AIError.code:type_name -> server.AIErrorCode
	6,   // 71: server.Suites.DataEntry.value:type_name -> server.Items
	8,   // 72: server.HistorySuites.DataEntry.value:type_name -> server.HistoryItems
	20,  // 73: server.Runner.Run:input_type -> server.TestTask
	17,  // 74: server.Runner.RunTestSuite:input_type -> server.TestSuiteIdentity
	55,  // 75: server.Runner.GetSuites:input_type -> server.Empty
	17,  // 76: server.Runner.CreateTestSuite:input_type -> server.TestSuiteIdentity
	11,  // 77: server.Runner.ImportTestSuite:input_type -> server.TestSuiteSource
	17,  // 78: server.Runner.GetTestSuite:input_type -> server.TestSuiteIdentity
	12,  // 79: server.Runner.UpdateTestSuite:input_type -> server.TestSuite
	17,  // 80: server.Runner.DeleteTestSuite:input_type -> server.TestSuiteIdentity
	18,  // 81: server.Runner.DuplicateTestSuite:input_type -> server.TestSuiteDuplicate
	18,  // 82: server.Runner.RenameTestSuite:input_type -> server.TestSuiteDuplicate
	17,  // 83: server.Runner.GetTestSuiteYaml:input_type -> server.TestSuiteIdentity
	17,  // 84: server.Runner.ListTestCase:input_type -> server.TestSuiteIdentity
	10,  // 85: server.Runner.RunTestCase:input_type -> server.TestCaseIdentity
	21,  // 86: server.Runner.BatchRun:input_type -> server.BatchTestTask
	10,  // 87: server.Runner.GetTestCase:input_type -> server.TestCaseIdentity
	27,  // 88: server.Runner.CreateTestCase:input_type -> server.TestCaseWithSuite
	27,  // 89: server.Runner.UpdateTestCase:input_type -> server.TestCaseWithSuite
	10,  // 90: server.Runner.DeleteTestCase:input_type -> server.TestCaseIdentity
	19,  // 91: server.Runner.DuplicateTestCase:input_type -> server.TestCaseDuplicate
	19,  // 92: server.Runner.RenameTestCase:input_type -> server.TestCaseDuplicate
	17,  // 93: server.Runner.GetSuggestedAPIs:input_type -> server.TestSuiteIdentity
	55,  // 94: server.Runner.GetHistorySuites:input_type -> server.Empty
	30,  // 95: server.Runner.GetHistoryTestCaseWithResult:input_type -> server.HistoryTestCase
	30,  // 96: server.Runner.GetHistoryTestCase:input_type -> server.HistoryTestCase
	30,  // 97: server.Runner.DeleteHistoryTestCase:input_type -> server.HistoryTestCase
	30,  // 98: server.Runner.DeleteAllHistoryTestCase:input_type -> server.HistoryTestCase
	29,  // 99: server.Runner.GetTestCaseAllHistory:input_type -> server.TestCase
	55,  // 100: server.Runner.ListCodeGenerator:input_type -> server.Empty
	48,  // 101: server.Runner.GenerateCode:input_type -> server.CodeGenerateRequest
	48,  // 102: server.Runner.HistoryGenerateCode:input_type -> server.CodeGenerateRequest
	55,  // 103: server.Runner.ListConverter:input_type -> server.Empty
	48,  // 104: server.Runner.ConvertTestSuite:input_type -> server.CodeGenerateRequest
	55,  // 105: server.Runner.PopularHeaders:input_type -> server.Empty
	38,  // 106: server.Runner.FunctionsQuery:input_type -> server.SimpleQuery
	38,  // 107: server.Runner.FunctionsQueryStream:input_type -> server.SimpleQuery
	38,  // 108: server.Runner.GetSchema:input_type -> server.SimpleQuery
	55,  // 109: server.Runner.GetVersion:input_type -> server.Empty
	55,  // 110: server.Runner.Sample:input_type -> server.Empty
	29,  // 111: server.Runner.DownloadResponseFile:input_type -> server.TestCase
	55,  // 112: server.Runner.GetStoreKinds:input_type -> server.Empty
	38,  // 113: server.Runner.GetStores:input_type -> server.SimpleQuery
	40,  // 114: server.Runner.CreateStore:input_type -> server.Store
	40,  // 115: server.Runner.UpdateStore:input_type -> server.Store
	40,  // 116: server.Runner.DeleteStore:input_type -> server.Store
	38,  // 117: server.Runner.VerifyStore:input_type -> server.SimpleQuery
	55,  // 118: server.Runner.GetSecrets:input_type -> server.Empty
	50,  // 119: server.Runner.CreateSecret:input_type -> server.Secret
	50,  // 120: server.Runner.DeleteSecret:input_type -> server.Secret
	50,  // 121: server.Runner.UpdateSecret:input_type -> server.Secret
	62,  // 122: server.Runner.GenerateSQL:input_type -> server.GenerateSQLRequest
	55,  // 123: server.Runner.GetAICapabilities:input_type -> server.Empty
	64,  // 124: server.Runner.ValidateSQL:input_type -> server.ValidateSQLRequest
	52,  // 125: server.Runner.PProf:input_type -> server.PProfRequest
	13,  // 126: server.RunnerExtension.Run:input_type -> server.TestSuiteWithCase
	55,  // 127: server.UIExtension.GetMenus:input_type -> server.Empty
	47,  // 128: server.UIExtension.GetPageOfJS:input_type -> server.SimpleName
	47,  // 129: server.UIExtension.GetPageOfCSS:input_type -> server.SimpleName
	47,  // 130: server.UIExtension.GetPageOfStatic:input_type -> server.SimpleName
	55,  // 131: server.ThemeExtension.GetThemes:input_type -> server.Empty
	47,  // 132: server.ThemeExtension.GetTheme:input_type -> server.SimpleName
	55,  // 133: server.ThemeExtension.GetBindings:input_type -> server.Empty
	47,  // 134: server.ThemeExtension.GetBinding:input_type -> server.SimpleName
	56,  // 135: server.Mock.Reload:input_type -> server.MockConfig
	55,  // 136: server.Mock.GetConfig:input_type -> server.Empty
	55,  // 137: server.Mock.LogWatch:input_type -> server.Empty
	59,  // 138: server.DataServer.Query:input_type -> server.DataQuery
	22,  // 139: server.Runner.Run:output_type -> server.TestResult
	22,  // 140: server.Runner.RunTestSuite:output_type -> server.TestResult
	5,   // 141: server.Runner.GetSuites:output_type -> server.Suites
	24,  // 142: server.Runner.CreateTestSuite:output_type -> server.HelloReply
	45,  // 143: server.Runner.ImportTestSuite:output_type -> server.CommonResult
	12,  // 144: server.Runner.GetTestSuite:output_type -> server.TestSuite
	24,  // 145: server.Runner.UpdateTestSuite:output_type -> server.HelloReply
	24,  // 146: server.Runner.DeleteTestSuite:output_type -> server.HelloReply
	24,  // 147: server.Runner.DuplicateTestSuite:output_type -> server.HelloReply
	24,  // 148: server.Runner.RenameTestSuite:output_type -> server.HelloReply
	25,  // 149: server.Runner.GetTestSuiteYaml:output_type -> server.YamlData
	26,  // 150: server.Runner.ListTestCase:output_type -> server.Suite
	35,  // 151: server.Runner.RunTestCase:output_type -> server.TestCaseResult
	22,  // 152: server.Runner.BatchRun:output_type -> server.TestResult
	29,  // 153: server.Runner.GetTestCase:output_type -> server.TestCase
	24,  // 154: server.Runner.CreateTestCase:output_type -> server.HelloReply
	24,  // 155: server.Runner.UpdateTestCase:output_type -> server.HelloReply
	24,  // 156: server.Runner.DeleteTestCase:output_type -> server.HelloReply
	24,  // 157: server.Runner.DuplicateTestCase:output_type -> server.HelloReply
	24,  // 158: server.Runner.RenameTestCase:output_type -> server.HelloReply
	28,  // 159: server.Runner.GetSuggestedAPIs:output_type -> server.TestCases
	7,   // 160: server.Runner.GetHistorySuites:output_type -> server.HistorySuites
	23,  // 161: server.Runner.GetHistoryTestCaseWithResult:output_type -> server.HistoryTestResult
	30,  // 162: server.Runner.GetHistoryTestCase:output_type -> server.HistoryTestCase
	24,  // 163: server.Runner.DeleteHistoryTestCase:output_type -> server.HelloReply
	24,  // 164: server.Runner.DeleteAllHistoryTestCase:output_type -> server.HelloReply
	31,  // 165: server.Runner.GetTestCaseAllHistory:output_type -> server.HistoryTestCases
	46,  // 166: server.Runner.ListCodeGenerator:output_type -> server.SimpleList
	45,  // 167: server.Runner.GenerateCode:output_type -> server.CommonResult
	45,  // 168: server.Runner.HistoryGenerateCode:output_type -> server.CommonResult
	46,  // 169: server.Runner.ListConverter:output_type -> server.SimpleList
	45,  // 170: server.Runner.ConvertTestSuite:output_type -> server.CommonResult
	37,  // 171: server.Runner.PopularHeaders:output_type -> server.Pairs
	37,  // 172: server.Runner.FunctionsQuery:output_type -> server.Pairs
	37,  // 173: server.Runner.FunctionsQueryStream:output_type -> server.Pairs
	45,  // 174: server.Runner.GetSchema:output_type -> server.CommonResult
	57,  // 175: server.Runner.GetVersion:output_type -> server.Version
	24,  // 176: server.Runner.Sample:output_type -> server.HelloReply
	54,  // 177: server.Runner.DownloadResponseFile:output_type -> server.FileData
	41,  // 178: server.Runner.GetStoreKinds:output_type -> server.StoreKinds
	39,  // 179: server.Runner.GetStores:output_type -> server.Stores
	40,  // 180: server.Runner.CreateStore:output_type -> server.Store
	40,  // 181: server.Runner.UpdateStore:output_type -> server.Store
	40,  // 182: server.Runner.DeleteStore:output_type -> server.Store
	51,  // 183: server.Runner.VerifyStore:output_type -> server.ExtensionStatus
	49,  // 184: server.Runner.GetSecrets:output_type -> server.Secrets
	45,  // 185: server.Runner.CreateSecret:output_type -> server.CommonResult
	45,  // 186: server.Runner.DeleteSecret:output_type -> server.CommonResult
	45,  // 187: server.Runner.UpdateSecret:output_type -> server.CommonResult
	63,  // 188: server.Runner.GenerateSQL:output_type -> server.GenerateSQLResponse
	66,  // 189: server.Runner.GetAICapabilities:output_type -> server.AICapabilitiesResponse
	65,  // 190: server.Runner.ValidateSQL:output_type -> server.ValidateSQLResponse
	53,  // 191: server.Runner.PProf:output_type -> server.PProfData
	45,  // 192: server.RunnerExtension.Run:output_type -> server.CommonResult
	4,   // 193: server.UIExtension.GetMenus:output_type -> server.MenuList
	45,  // 194: server.UIExtension.GetPageOfJS:output_type -> server.CommonResult
	45,  // 195: server.UIExtension.GetPageOfCSS:output_type -> server.CommonResult
	45,  // 196: server.UIExtension.GetPageOfStatic:output_type -> server.CommonResult
	46,  // 197: server.ThemeExtension.GetThemes:output_type -> server.SimpleList
	45,  // 198: server.ThemeExtension.GetTheme:output_type -> server.CommonResult
	46,  // 199: server.ThemeExtension.GetBindings:output_type -> server.SimpleList
	45,  // 200: server.ThemeExtension.GetBinding:output_type -> server.CommonResult
	55,  // 201: server.Mock.Reload:output_type -> server.Empty
	56,  // 202: server.Mock.GetConfig:output_type -> server.MockConfig
	45,  // 203: server.Mock.LogWatch:output_type -> server.CommonResult
	60,  // 204: server.DataServer.Query:output_type -> server.DataQueryResult
	139, // [139:205] is the sub-list for method output_type
	73,  // [73:139] is the sub-list for method input_type
	73,  // [73:73] is the sub-list for extension type_name
	73,  // [73:73] is the sub-list for extension extendee
	0,   // [0:73] is the sub-list for field type_name
}

func init() { file_pkg_server_server_proto_init() }
func file_pkg_server_server_proto_init() {
	if File_pkg_server_server_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_pkg_server_server_proto_rawDesc), len(file_pkg_server_server_proto_rawDesc)),
			NumEnums:      3,
			NumMessages:   81,
			NumExtensions: 0,
			NumServices:   6,
		},
		GoTypes:           file_pkg_server_server_proto_goTypes,
		DependencyIndexes: file_pkg_server_server_proto_depIdxs,
		EnumInfos:         file_pkg_server_server_proto_enumTypes,
		MessageInfos:      file_pkg_server_server_proto_msgTypes,
	}.Build()
	File_pkg_server_server_proto = out.File
	file_pkg_server_server_proto_goTypes = nil
	file_pkg_server_server_proto_depIdxs = nil
}
