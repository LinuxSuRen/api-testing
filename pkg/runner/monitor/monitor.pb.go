// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.9
// 	protoc        v5.29.3
// source: pkg/runner/monitor/monitor.proto

package monitor

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ResourceUsage struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Memory        uint64                 `protobuf:"varint,1,opt,name=memory,proto3" json:"memory,omitempty"`
	Cpu           uint64                 `protobuf:"varint,2,opt,name=cpu,proto3" json:"cpu,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ResourceUsage) Reset() {
	*x = ResourceUsage{}
	mi := &file_pkg_runner_monitor_monitor_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ResourceUsage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResourceUsage) ProtoMessage() {}

func (x *ResourceUsage) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_runner_monitor_monitor_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResourceUsage.ProtoReflect.Descriptor instead.
func (*ResourceUsage) Descriptor() ([]byte, []int) {
	return file_pkg_runner_monitor_monitor_proto_rawDescGZIP(), []int{0}
}

func (x *ResourceUsage) GetMemory() uint64 {
	if x != nil {
		return x.Memory
	}
	return 0
}

func (x *ResourceUsage) GetCpu() uint64 {
	if x != nil {
		return x.Cpu
	}
	return 0
}

type Target struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Name          string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Target) Reset() {
	*x = Target{}
	mi := &file_pkg_runner_monitor_monitor_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Target) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Target) ProtoMessage() {}

func (x *Target) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_runner_monitor_monitor_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Target.ProtoReflect.Descriptor instead.
func (*Target) Descriptor() ([]byte, []int) {
	return file_pkg_runner_monitor_monitor_proto_rawDescGZIP(), []int{1}
}

func (x *Target) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

var File_pkg_runner_monitor_monitor_proto protoreflect.FileDescriptor

const file_pkg_runner_monitor_monitor_proto_rawDesc = "" +
	"\n" +
	" pkg/runner/monitor/monitor.proto\x12\amonitor\"9\n" +
	"\rResourceUsage\x12\x16\n" +
	"\x06memory\x18\x01 \x01(\x04R\x06memory\x12\x10\n" +
	"\x03cpu\x18\x02 \x01(\x04R\x03cpu\"\x1c\n" +
	"\x06Target\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name2H\n" +
	"\aMonitor\x12=\n" +
	"\x10GetResourceUsage\x12\x0f.monitor.Target\x1a\x16.monitor.ResourceUsage\"\x00B6Z4github.com/linuxsuren/api-testing/pkg/runner/monitorb\x06proto3"

var (
	file_pkg_runner_monitor_monitor_proto_rawDescOnce sync.Once
	file_pkg_runner_monitor_monitor_proto_rawDescData []byte
)

func file_pkg_runner_monitor_monitor_proto_rawDescGZIP() []byte {
	file_pkg_runner_monitor_monitor_proto_rawDescOnce.Do(func() {
		file_pkg_runner_monitor_monitor_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_pkg_runner_monitor_monitor_proto_rawDesc), len(file_pkg_runner_monitor_monitor_proto_rawDesc)))
	})
	return file_pkg_runner_monitor_monitor_proto_rawDescData
}

var file_pkg_runner_monitor_monitor_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_pkg_runner_monitor_monitor_proto_goTypes = []any{
	(*ResourceUsage)(nil), // 0: monitor.ResourceUsage
	(*Target)(nil),        // 1: monitor.Target
}
var file_pkg_runner_monitor_monitor_proto_depIdxs = []int32{
	1, // 0: monitor.Monitor.GetResourceUsage:input_type -> monitor.Target
	0, // 1: monitor.Monitor.GetResourceUsage:output_type -> monitor.ResourceUsage
	1, // [1:2] is the sub-list for method output_type
	0, // [0:1] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_pkg_runner_monitor_monitor_proto_init() }
func file_pkg_runner_monitor_monitor_proto_init() {
	if File_pkg_runner_monitor_monitor_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_pkg_runner_monitor_monitor_proto_rawDesc), len(file_pkg_runner_monitor_monitor_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_pkg_runner_monitor_monitor_proto_goTypes,
		DependencyIndexes: file_pkg_runner_monitor_monitor_proto_depIdxs,
		MessageInfos:      file_pkg_runner_monitor_monitor_proto_msgTypes,
	}.Build()
	File_pkg_runner_monitor_monitor_proto = out.File
	file_pkg_runner_monitor_monitor_proto_goTypes = nil
	file_pkg_runner_monitor_monitor_proto_depIdxs = nil
}
