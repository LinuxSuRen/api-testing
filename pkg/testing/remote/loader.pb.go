// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.7
// 	protoc        v5.29.3
// source: pkg/testing/remote/loader.proto

package remote

import (
	server "github.com/linuxsuren/api-testing/pkg/server"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type TestSuites struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Data          []*TestSuite           `protobuf:"bytes,1,rep,name=data,proto3" json:"data,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TestSuites) Reset() {
	*x = TestSuites{}
	mi := &file_pkg_testing_remote_loader_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TestSuites) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TestSuites) ProtoMessage() {}

func (x *TestSuites) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_testing_remote_loader_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TestSuites.ProtoReflect.Descriptor instead.
func (*TestSuites) Descriptor() ([]byte, []int) {
	return file_pkg_testing_remote_loader_proto_rawDescGZIP(), []int{0}
}

func (x *TestSuites) GetData() []*TestSuite {
	if x != nil {
		return x.Data
	}
	return nil
}

type TestSuite struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Name          string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Api           string                 `protobuf:"bytes,2,opt,name=api,proto3" json:"api,omitempty"`
	Param         []*server.Pair         `protobuf:"bytes,3,rep,name=param,proto3" json:"param,omitempty"`
	Spec          *server.APISpec        `protobuf:"bytes,4,opt,name=spec,proto3" json:"spec,omitempty"`
	Items         []*server.TestCase     `protobuf:"bytes,5,rep,name=items,proto3" json:"items,omitempty"`
	Full          bool                   `protobuf:"varint,6,opt,name=full,proto3" json:"full,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TestSuite) Reset() {
	*x = TestSuite{}
	mi := &file_pkg_testing_remote_loader_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TestSuite) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TestSuite) ProtoMessage() {}

func (x *TestSuite) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_testing_remote_loader_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TestSuite.ProtoReflect.Descriptor instead.
func (*TestSuite) Descriptor() ([]byte, []int) {
	return file_pkg_testing_remote_loader_proto_rawDescGZIP(), []int{1}
}

func (x *TestSuite) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *TestSuite) GetApi() string {
	if x != nil {
		return x.Api
	}
	return ""
}

func (x *TestSuite) GetParam() []*server.Pair {
	if x != nil {
		return x.Param
	}
	return nil
}

func (x *TestSuite) GetSpec() *server.APISpec {
	if x != nil {
		return x.Spec
	}
	return nil
}

func (x *TestSuite) GetItems() []*server.TestCase {
	if x != nil {
		return x.Items
	}
	return nil
}

func (x *TestSuite) GetFull() bool {
	if x != nil {
		return x.Full
	}
	return false
}

type HistoryTestSuites struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Data          []*HistoryTestSuite    `protobuf:"bytes,1,rep,name=data,proto3" json:"data,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *HistoryTestSuites) Reset() {
	*x = HistoryTestSuites{}
	mi := &file_pkg_testing_remote_loader_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *HistoryTestSuites) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HistoryTestSuites) ProtoMessage() {}

func (x *HistoryTestSuites) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_testing_remote_loader_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HistoryTestSuites.ProtoReflect.Descriptor instead.
func (*HistoryTestSuites) Descriptor() ([]byte, []int) {
	return file_pkg_testing_remote_loader_proto_rawDescGZIP(), []int{2}
}

func (x *HistoryTestSuites) GetData() []*HistoryTestSuite {
	if x != nil {
		return x.Data
	}
	return nil
}

type HistoryTestSuite struct {
	state            protoimpl.MessageState    `protogen:"open.v1"`
	HistorySuiteName string                    `protobuf:"bytes,1,opt,name=historySuiteName,proto3" json:"historySuiteName,omitempty"`
	Items            []*server.HistoryTestCase `protobuf:"bytes,2,rep,name=items,proto3" json:"items,omitempty"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *HistoryTestSuite) Reset() {
	*x = HistoryTestSuite{}
	mi := &file_pkg_testing_remote_loader_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *HistoryTestSuite) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HistoryTestSuite) ProtoMessage() {}

func (x *HistoryTestSuite) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_testing_remote_loader_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HistoryTestSuite.ProtoReflect.Descriptor instead.
func (*HistoryTestSuite) Descriptor() ([]byte, []int) {
	return file_pkg_testing_remote_loader_proto_rawDescGZIP(), []int{3}
}

func (x *HistoryTestSuite) GetHistorySuiteName() string {
	if x != nil {
		return x.HistorySuiteName
	}
	return ""
}

func (x *HistoryTestSuite) GetItems() []*server.HistoryTestCase {
	if x != nil {
		return x.Items
	}
	return nil
}

type Configs struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Data          []*Config              `protobuf:"bytes,1,rep,name=data,proto3" json:"data,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Configs) Reset() {
	*x = Configs{}
	mi := &file_pkg_testing_remote_loader_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Configs) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Configs) ProtoMessage() {}

func (x *Configs) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_testing_remote_loader_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Configs.ProtoReflect.Descriptor instead.
func (*Configs) Descriptor() ([]byte, []int) {
	return file_pkg_testing_remote_loader_proto_rawDescGZIP(), []int{4}
}

func (x *Configs) GetData() []*Config {
	if x != nil {
		return x.Data
	}
	return nil
}

type Config struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Name          string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Value         string                 `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`
	Description   string                 `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Config) Reset() {
	*x = Config{}
	mi := &file_pkg_testing_remote_loader_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Config) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Config) ProtoMessage() {}

func (x *Config) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_testing_remote_loader_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Config.ProtoReflect.Descriptor instead.
func (*Config) Descriptor() ([]byte, []int) {
	return file_pkg_testing_remote_loader_proto_rawDescGZIP(), []int{5}
}

func (x *Config) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Config) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

func (x *Config) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

var File_pkg_testing_remote_loader_proto protoreflect.FileDescriptor

const file_pkg_testing_remote_loader_proto_rawDesc = "" +
	"\n" +
	"\x1fpkg/testing/remote/loader.proto\x12\x06remote\x1a\x17pkg/server/server.proto\"3\n" +
	"\n" +
	"TestSuites\x12%\n" +
	"\x04data\x18\x01 \x03(\v2\x11.remote.TestSuiteR\x04data\"\xb6\x01\n" +
	"\tTestSuite\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12\x10\n" +
	"\x03api\x18\x02 \x01(\tR\x03api\x12\"\n" +
	"\x05param\x18\x03 \x03(\v2\f.server.PairR\x05param\x12#\n" +
	"\x04spec\x18\x04 \x01(\v2\x0f.server.APISpecR\x04spec\x12&\n" +
	"\x05items\x18\x05 \x03(\v2\x10.server.TestCaseR\x05items\x12\x12\n" +
	"\x04full\x18\x06 \x01(\bR\x04full\"A\n" +
	"\x11HistoryTestSuites\x12,\n" +
	"\x04data\x18\x01 \x03(\v2\x18.remote.HistoryTestSuiteR\x04data\"m\n" +
	"\x10HistoryTestSuite\x12*\n" +
	"\x10historySuiteName\x18\x01 \x01(\tR\x10historySuiteName\x12-\n" +
	"\x05items\x18\x02 \x03(\v2\x17.server.HistoryTestCaseR\x05items\"-\n" +
	"\aConfigs\x12\"\n" +
	"\x04data\x18\x01 \x03(\v2\x0e.remote.ConfigR\x04data\"T\n" +
	"\x06Config\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value\x12 \n" +
	"\vdescription\x18\x03 \x01(\tR\vdescription2\xd7\f\n" +
	"\x06Loader\x124\n" +
	"\rListTestSuite\x12\r.server.Empty\x1a\x12.remote.TestSuites\"\x00\x125\n" +
	"\x0fCreateTestSuite\x12\x11.remote.TestSuite\x1a\r.server.Empty\"\x00\x126\n" +
	"\fGetTestSuite\x12\x11.remote.TestSuite\x1a\x11.remote.TestSuite\"\x00\x129\n" +
	"\x0fUpdateTestSuite\x12\x11.remote.TestSuite\x1a\x11.remote.TestSuite\"\x00\x125\n" +
	"\x0fDeleteTestSuite\x12\x11.remote.TestSuite\x1a\r.server.Empty\"\x00\x12C\n" +
	"\x0fRenameTestSuite\x12\x1a.server.TestSuiteDuplicate\x1a\x12.server.HelloReply\"\x00\x127\n" +
	"\rListTestCases\x12\x11.remote.TestSuite\x1a\x11.server.TestCases\"\x00\x123\n" +
	"\x0eCreateTestCase\x12\x10.server.TestCase\x1a\r.server.Empty\"\x00\x123\n" +
	"\vGetTestCase\x12\x10.server.TestCase\x1a\x10.server.TestCase\"\x00\x126\n" +
	"\x0eUpdateTestCase\x12\x10.server.TestCase\x1a\x10.server.TestCase\"\x00\x123\n" +
	"\x0eDeleteTestCase\x12\x10.server.TestCase\x1a\r.server.Empty\"\x00\x12A\n" +
	"\x0eRenameTestCase\x12\x19.server.TestCaseDuplicate\x1a\x12.server.HelloReply\"\x00\x12B\n" +
	"\x14ListHistoryTestSuite\x12\r.server.Empty\x1a\x19.remote.HistoryTestSuites\"\x00\x12C\n" +
	"\x15CreateTestCaseHistory\x12\x19.server.HistoryTestResult\x1a\r.server.Empty\"\x00\x12T\n" +
	"\x1cGetHistoryTestCaseWithResult\x12\x17.server.HistoryTestCase\x1a\x19.server.HistoryTestResult\"\x00\x12H\n" +
	"\x12GetHistoryTestCase\x12\x17.server.HistoryTestCase\x1a\x17.server.HistoryTestCase\"\x00\x12A\n" +
	"\x15DeleteHistoryTestCase\x12\x17.server.HistoryTestCase\x1a\r.server.Empty\"\x00\x12D\n" +
	"\x18DeleteAllHistoryTestCase\x12\x17.server.HistoryTestCase\x1a\r.server.Empty\"\x00\x12E\n" +
	"\x15GetTestCaseAllHistory\x12\x10.server.TestCase\x1a\x18.server.HistoryTestCases\"\x00\x12.\n" +
	"\n" +
	"GetVersion\x12\r.server.Empty\x1a\x0f.server.Version\"\x00\x122\n" +
	"\x06Verify\x12\r.server.Empty\x1a\x17.server.ExtensionStatus\"\x00\x122\n" +
	"\x05PProf\x12\x14.server.PProfRequest\x1a\x11.server.PProfData\"\x00\x125\n" +
	"\x05Query\x12\x11.server.DataQuery\x1a\x17.server.DataQueryResult\"\x00\x120\n" +
	"\tGetThemes\x12\r.server.Empty\x1a\x12.server.SimpleList\"\x00\x126\n" +
	"\bGetTheme\x12\x12.server.SimpleName\x1a\x14.server.CommonResult\"\x00\x122\n" +
	"\vGetBindings\x12\r.server.Empty\x1a\x12.server.SimpleList\"\x00\x128\n" +
	"\n" +
	"GetBinding\x12\x12.server.SimpleName\x1a\x14.server.CommonResult\"\x002\x96\x02\n" +
	"\rSecretService\x12-\n" +
	"\tGetSecret\x12\x0e.server.Secret\x1a\x0e.server.Secret\"\x00\x12.\n" +
	"\n" +
	"GetSecrets\x12\r.server.Empty\x1a\x0f.server.Secrets\"\x00\x126\n" +
	"\fCreateSecret\x12\x0e.server.Secret\x1a\x14.server.CommonResult\"\x00\x126\n" +
	"\fDeleteSecret\x12\x0e.server.Secret\x1a\x14.server.CommonResult\"\x00\x126\n" +
	"\fUpdateSecret\x12\x0e.server.Secret\x1a\x14.server.CommonResult\"\x002\x9e\x02\n" +
	"\rConfigService\x12.\n" +
	"\n" +
	"GetConfigs\x12\r.server.Empty\x1a\x0f.remote.Configs\"\x00\x121\n" +
	"\tGetConfig\x12\x12.server.SimpleName\x1a\x0e.remote.Config\"\x00\x126\n" +
	"\fCreateConfig\x12\x0e.remote.Config\x1a\x14.server.CommonResult\"\x00\x126\n" +
	"\fUpdateConfig\x12\x0e.remote.Config\x1a\x14.server.CommonResult\"\x00\x12:\n" +
	"\fDeleteConfig\x12\x12.server.SimpleName\x1a\x14.server.CommonResult\"\x00B6Z4github.com/linuxsuren/api-testing/pkg/testing/remoteb\x06proto3"

var (
	file_pkg_testing_remote_loader_proto_rawDescOnce sync.Once
	file_pkg_testing_remote_loader_proto_rawDescData []byte
)

func file_pkg_testing_remote_loader_proto_rawDescGZIP() []byte {
	file_pkg_testing_remote_loader_proto_rawDescOnce.Do(func() {
		file_pkg_testing_remote_loader_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_pkg_testing_remote_loader_proto_rawDesc), len(file_pkg_testing_remote_loader_proto_rawDesc)))
	})
	return file_pkg_testing_remote_loader_proto_rawDescData
}

var file_pkg_testing_remote_loader_proto_msgTypes = make([]protoimpl.MessageInfo, 6)
var file_pkg_testing_remote_loader_proto_goTypes = []any{
	(*TestSuites)(nil),                // 0: remote.TestSuites
	(*TestSuite)(nil),                 // 1: remote.TestSuite
	(*HistoryTestSuites)(nil),         // 2: remote.HistoryTestSuites
	(*HistoryTestSuite)(nil),          // 3: remote.HistoryTestSuite
	(*Configs)(nil),                   // 4: remote.Configs
	(*Config)(nil),                    // 5: remote.Config
	(*server.Pair)(nil),               // 6: server.Pair
	(*server.APISpec)(nil),            // 7: server.APISpec
	(*server.TestCase)(nil),           // 8: server.TestCase
	(*server.HistoryTestCase)(nil),    // 9: server.HistoryTestCase
	(*server.Empty)(nil),              // 10: server.Empty
	(*server.TestSuiteDuplicate)(nil), // 11: server.TestSuiteDuplicate
	(*server.TestCaseDuplicate)(nil),  // 12: server.TestCaseDuplicate
	(*server.HistoryTestResult)(nil),  // 13: server.HistoryTestResult
	(*server.PProfRequest)(nil),       // 14: server.PProfRequest
	(*server.DataQuery)(nil),          // 15: server.DataQuery
	(*server.SimpleName)(nil),         // 16: server.SimpleName
	(*server.Secret)(nil),             // 17: server.Secret
	(*server.HelloReply)(nil),         // 18: server.HelloReply
	(*server.TestCases)(nil),          // 19: server.TestCases
	(*server.HistoryTestCases)(nil),   // 20: server.HistoryTestCases
	(*server.Version)(nil),            // 21: server.Version
	(*server.ExtensionStatus)(nil),    // 22: server.ExtensionStatus
	(*server.PProfData)(nil),          // 23: server.PProfData
	(*server.DataQueryResult)(nil),    // 24: server.DataQueryResult
	(*server.SimpleList)(nil),         // 25: server.SimpleList
	(*server.CommonResult)(nil),       // 26: server.CommonResult
	(*server.Secrets)(nil),            // 27: server.Secrets
}
var file_pkg_testing_remote_loader_proto_depIdxs = []int32{
	1,  // 0: remote.TestSuites.data:type_name -> remote.TestSuite
	6,  // 1: remote.TestSuite.param:type_name -> server.Pair
	7,  // 2: remote.TestSuite.spec:type_name -> server.APISpec
	8,  // 3: remote.TestSuite.items:type_name -> server.TestCase
	3,  // 4: remote.HistoryTestSuites.data:type_name -> remote.HistoryTestSuite
	9,  // 5: remote.HistoryTestSuite.items:type_name -> server.HistoryTestCase
	5,  // 6: remote.Configs.data:type_name -> remote.Config
	10, // 7: remote.Loader.ListTestSuite:input_type -> server.Empty
	1,  // 8: remote.Loader.CreateTestSuite:input_type -> remote.TestSuite
	1,  // 9: remote.Loader.GetTestSuite:input_type -> remote.TestSuite
	1,  // 10: remote.Loader.UpdateTestSuite:input_type -> remote.TestSuite
	1,  // 11: remote.Loader.DeleteTestSuite:input_type -> remote.TestSuite
	11, // 12: remote.Loader.RenameTestSuite:input_type -> server.TestSuiteDuplicate
	1,  // 13: remote.Loader.ListTestCases:input_type -> remote.TestSuite
	8,  // 14: remote.Loader.CreateTestCase:input_type -> server.TestCase
	8,  // 15: remote.Loader.GetTestCase:input_type -> server.TestCase
	8,  // 16: remote.Loader.UpdateTestCase:input_type -> server.TestCase
	8,  // 17: remote.Loader.DeleteTestCase:input_type -> server.TestCase
	12, // 18: remote.Loader.RenameTestCase:input_type -> server.TestCaseDuplicate
	10, // 19: remote.Loader.ListHistoryTestSuite:input_type -> server.Empty
	13, // 20: remote.Loader.CreateTestCaseHistory:input_type -> server.HistoryTestResult
	9,  // 21: remote.Loader.GetHistoryTestCaseWithResult:input_type -> server.HistoryTestCase
	9,  // 22: remote.Loader.GetHistoryTestCase:input_type -> server.HistoryTestCase
	9,  // 23: remote.Loader.DeleteHistoryTestCase:input_type -> server.HistoryTestCase
	9,  // 24: remote.Loader.DeleteAllHistoryTestCase:input_type -> server.HistoryTestCase
	8,  // 25: remote.Loader.GetTestCaseAllHistory:input_type -> server.TestCase
	10, // 26: remote.Loader.GetVersion:input_type -> server.Empty
	10, // 27: remote.Loader.Verify:input_type -> server.Empty
	14, // 28: remote.Loader.PProf:input_type -> server.PProfRequest
	15, // 29: remote.Loader.Query:input_type -> server.DataQuery
	10, // 30: remote.Loader.GetThemes:input_type -> server.Empty
	16, // 31: remote.Loader.GetTheme:input_type -> server.SimpleName
	10, // 32: remote.Loader.GetBindings:input_type -> server.Empty
	16, // 33: remote.Loader.GetBinding:input_type -> server.SimpleName
	17, // 34: remote.SecretService.GetSecret:input_type -> server.Secret
	10, // 35: remote.SecretService.GetSecrets:input_type -> server.Empty
	17, // 36: remote.SecretService.CreateSecret:input_type -> server.Secret
	17, // 37: remote.SecretService.DeleteSecret:input_type -> server.Secret
	17, // 38: remote.SecretService.UpdateSecret:input_type -> server.Secret
	10, // 39: remote.ConfigService.GetConfigs:input_type -> server.Empty
	16, // 40: remote.ConfigService.GetConfig:input_type -> server.SimpleName
	5,  // 41: remote.ConfigService.CreateConfig:input_type -> remote.Config
	5,  // 42: remote.ConfigService.UpdateConfig:input_type -> remote.Config
	16, // 43: remote.ConfigService.DeleteConfig:input_type -> server.SimpleName
	0,  // 44: remote.Loader.ListTestSuite:output_type -> remote.TestSuites
	10, // 45: remote.Loader.CreateTestSuite:output_type -> server.Empty
	1,  // 46: remote.Loader.GetTestSuite:output_type -> remote.TestSuite
	1,  // 47: remote.Loader.UpdateTestSuite:output_type -> remote.TestSuite
	10, // 48: remote.Loader.DeleteTestSuite:output_type -> server.Empty
	18, // 49: remote.Loader.RenameTestSuite:output_type -> server.HelloReply
	19, // 50: remote.Loader.ListTestCases:output_type -> server.TestCases
	10, // 51: remote.Loader.CreateTestCase:output_type -> server.Empty
	8,  // 52: remote.Loader.GetTestCase:output_type -> server.TestCase
	8,  // 53: remote.Loader.UpdateTestCase:output_type -> server.TestCase
	10, // 54: remote.Loader.DeleteTestCase:output_type -> server.Empty
	18, // 55: remote.Loader.RenameTestCase:output_type -> server.HelloReply
	2,  // 56: remote.Loader.ListHistoryTestSuite:output_type -> remote.HistoryTestSuites
	10, // 57: remote.Loader.CreateTestCaseHistory:output_type -> server.Empty
	13, // 58: remote.Loader.GetHistoryTestCaseWithResult:output_type -> server.HistoryTestResult
	9,  // 59: remote.Loader.GetHistoryTestCase:output_type -> server.HistoryTestCase
	10, // 60: remote.Loader.DeleteHistoryTestCase:output_type -> server.Empty
	10, // 61: remote.Loader.DeleteAllHistoryTestCase:output_type -> server.Empty
	20, // 62: remote.Loader.GetTestCaseAllHistory:output_type -> server.HistoryTestCases
	21, // 63: remote.Loader.GetVersion:output_type -> server.Version
	22, // 64: remote.Loader.Verify:output_type -> server.ExtensionStatus
	23, // 65: remote.Loader.PProf:output_type -> server.PProfData
	24, // 66: remote.Loader.Query:output_type -> server.DataQueryResult
	25, // 67: remote.Loader.GetThemes:output_type -> server.SimpleList
	26, // 68: remote.Loader.GetTheme:output_type -> server.CommonResult
	25, // 69: remote.Loader.GetBindings:output_type -> server.SimpleList
	26, // 70: remote.Loader.GetBinding:output_type -> server.CommonResult
	17, // 71: remote.SecretService.GetSecret:output_type -> server.Secret
	27, // 72: remote.SecretService.GetSecrets:output_type -> server.Secrets
	26, // 73: remote.SecretService.CreateSecret:output_type -> server.CommonResult
	26, // 74: remote.SecretService.DeleteSecret:output_type -> server.CommonResult
	26, // 75: remote.SecretService.UpdateSecret:output_type -> server.CommonResult
	4,  // 76: remote.ConfigService.GetConfigs:output_type -> remote.Configs
	5,  // 77: remote.ConfigService.GetConfig:output_type -> remote.Config
	26, // 78: remote.ConfigService.CreateConfig:output_type -> server.CommonResult
	26, // 79: remote.ConfigService.UpdateConfig:output_type -> server.CommonResult
	26, // 80: remote.ConfigService.DeleteConfig:output_type -> server.CommonResult
	44, // [44:81] is the sub-list for method output_type
	7,  // [7:44] is the sub-list for method input_type
	7,  // [7:7] is the sub-list for extension type_name
	7,  // [7:7] is the sub-list for extension extendee
	0,  // [0:7] is the sub-list for field type_name
}

func init() { file_pkg_testing_remote_loader_proto_init() }
func file_pkg_testing_remote_loader_proto_init() {
	if File_pkg_testing_remote_loader_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_pkg_testing_remote_loader_proto_rawDesc), len(file_pkg_testing_remote_loader_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   6,
			NumExtensions: 0,
			NumServices:   3,
		},
		GoTypes:           file_pkg_testing_remote_loader_proto_goTypes,
		DependencyIndexes: file_pkg_testing_remote_loader_proto_depIdxs,
		MessageInfos:      file_pkg_testing_remote_loader_proto_msgTypes,
	}.Build()
	File_pkg_testing_remote_loader_proto = out.File
	file_pkg_testing_remote_loader_proto_goTypes = nil
	file_pkg_testing_remote_loader_proto_depIdxs = nil
}
